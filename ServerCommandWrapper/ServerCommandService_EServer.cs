/****************************************************************************************************************************************************************************
 *                                                                                                                                                                          *
 * This below code has been automatically generated with wsdl.exe                                                                                                           *
 *                                                                                                                                                                          *
 * The wsdl was executed against an C-server, but configured to point at the E-server, as a code-generation from the E-server isn't possible.                               *
 * Therefore a few of the methods won't be possible as i.e. GetConfiguration, where the http://<host>/systeminfo.xml file should be used instead.                              *
 * The only code line changed manually is the constructor of ServerCommandService at line 150: It was changed to take the URL as parameter instead of having it hardcoded.   *
 *                                                                                                                                                                          *
 * The following line was executed to generate the file:                                                                                                                    *
 * wsdl.exe -language:cs -n:"ServerCommandService_EServer" http://<host>/Serverapi/servercommandservice.asmx?wsdl                                                           *
 *                                                                                                                                                                          *
 *                                                                                                                                                                          *
 ****************************************************************************************************************************************************************************/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.7.2053.0.
// 
namespace ServerCommandService_EServer
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServerCommandServiceSoap", Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeviceInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DictionaryEntry[]))]
    public partial class ServerCommandService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;

        private System.Threading.SendOrPostCallback GetServerVersionOperationCompleted;

        private System.Threading.SendOrPostCallback GetProductInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetSystemLicenseInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetSmartClientVersionOperationCompleted;

        private System.Threading.SendOrPostCallback CheckSmartClientVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IsOnlineOperationCompleted;

        private System.Threading.SendOrPostCallback LoginOperationCompleted;

        private System.Threading.SendOrPostCallback LogoutOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;

        private System.Threading.SendOrPostCallback GetConfigurationOperationCompleted;

        private System.Threading.SendOrPostCallback GetConfigurationRecordersOperationCompleted;

        private System.Threading.SendOrPostCallback GetConfigurationHardwareOperationCompleted;

        private System.Threading.SendOrPostCallback GetDevicesDisabledOperationCompleted;

        private System.Threading.SendOrPostCallback GetVmoServicesListOperationCompleted;

        private System.Threading.SendOrPostCallback GetViewGroupsOperationCompleted;

        private System.Threading.SendOrPostCallback GetViewGroupDataOperationCompleted;

        private System.Threading.SendOrPostCallback SetViewGroupDataOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomSettingDataGlobalOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomSettingDataUserOperationCompleted;

        private System.Threading.SendOrPostCallback SetCustomSettingDataGlobalOperationCompleted;

        private System.Threading.SendOrPostCallback SetCustomSettingDataUserOperationCompleted;

        private System.Threading.SendOrPostCallback EventTriggerOperationCompleted;

        private System.Threading.SendOrPostCallback EventTriggerWithMetadataOperationCompleted;

        private System.Threading.SendOrPostCallback AlertsGetAroundWithSpanOperationCompleted;

        private System.Threading.SendOrPostCallback MatrixMonitorActivateCameraOperationCompleted;

        private System.Threading.SendOrPostCallback QueryChangesOperationCompleted;

        private System.Threading.SendOrPostCallback QueryRecorderInfoOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkGetNewReferenceOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkCreateOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkUpdateOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkDeleteOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkGetOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkSearchTimeOperationCompleted;

        private System.Threading.SendOrPostCallback BookmarkSearchFromBookmarkOperationCompleted;

        private System.Threading.SendOrPostCallback QuerySystemMonitorStateSourcesByIdsOperationCompleted;

        private System.Threading.SendOrPostCallback QuerySystemMonitorStateSourcesByTypesOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataGetNewReferenceOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataCreateOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataUpdateOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataDeleteOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataGetOperationCompleted;

        private System.Threading.SendOrPostCallback MarkedDataSearchOperationCompleted;

        private System.Threading.SendOrPostCallback GetClientProfileOperationCompleted;

        private System.Threading.SendOrPostCallback GetPresetsOperationCompleted;

        private System.Threading.SendOrPostCallback DeletePresetOperationCompleted;

        private System.Threading.SendOrPostCallback UpdatePresetNameOperationCompleted;

        private System.Threading.SendOrPostCallback UpdatePresetPositionOperationCompleted;

        private System.Threading.SendOrPostCallback CreatePresetOperationCompleted;

        private System.Threading.SendOrPostCallback OrderPresetsOperationCompleted;

        /// <remarks/>
        public ServerCommandService(String url)
        {
            this.Url = url;
        }

        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;

        /// <remarks/>
        public event GetServerVersionCompletedEventHandler GetServerVersionCompleted;

        /// <remarks/>
        public event GetProductInfoCompletedEventHandler GetProductInfoCompleted;

        /// <remarks/>
        public event GetSystemLicenseInfoCompletedEventHandler GetSystemLicenseInfoCompleted;

        /// <remarks/>
        public event GetSmartClientVersionCompletedEventHandler GetSmartClientVersionCompleted;

        /// <remarks/>
        public event CheckSmartClientVersionCompletedEventHandler CheckSmartClientVersionCompleted;

        /// <remarks/>
        public event IsOnlineCompletedEventHandler IsOnlineCompleted;

        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;

        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;

        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;

        /// <remarks/>
        public event GetConfigurationCompletedEventHandler GetConfigurationCompleted;

        /// <remarks/>
        public event GetConfigurationRecordersCompletedEventHandler GetConfigurationRecordersCompleted;

        /// <remarks/>
        public event GetConfigurationHardwareCompletedEventHandler GetConfigurationHardwareCompleted;

        /// <remarks/>
        public event GetDevicesDisabledCompletedEventHandler GetDevicesDisabledCompleted;

        /// <remarks/>
        public event GetVmoServicesListCompletedEventHandler GetVmoServicesListCompleted;

        /// <remarks/>
        public event GetViewGroupsCompletedEventHandler GetViewGroupsCompleted;

        /// <remarks/>
        public event GetViewGroupDataCompletedEventHandler GetViewGroupDataCompleted;

        /// <remarks/>
        public event SetViewGroupDataCompletedEventHandler SetViewGroupDataCompleted;

        /// <remarks/>
        public event GetCustomSettingDataGlobalCompletedEventHandler GetCustomSettingDataGlobalCompleted;

        /// <remarks/>
        public event GetCustomSettingDataUserCompletedEventHandler GetCustomSettingDataUserCompleted;

        /// <remarks/>
        public event SetCustomSettingDataGlobalCompletedEventHandler SetCustomSettingDataGlobalCompleted;

        /// <remarks/>
        public event SetCustomSettingDataUserCompletedEventHandler SetCustomSettingDataUserCompleted;

        /// <remarks/>
        public event EventTriggerCompletedEventHandler EventTriggerCompleted;

        /// <remarks/>
        public event EventTriggerWithMetadataCompletedEventHandler EventTriggerWithMetadataCompleted;

        /// <remarks/>
        public event AlertsGetAroundWithSpanCompletedEventHandler AlertsGetAroundWithSpanCompleted;

        /// <remarks/>
        public event MatrixMonitorActivateCameraCompletedEventHandler MatrixMonitorActivateCameraCompleted;

        /// <remarks/>
        public event QueryChangesCompletedEventHandler QueryChangesCompleted;

        /// <remarks/>
        public event QueryRecorderInfoCompletedEventHandler QueryRecorderInfoCompleted;

        /// <remarks/>
        public event BookmarkGetNewReferenceCompletedEventHandler BookmarkGetNewReferenceCompleted;

        /// <remarks/>
        public event BookmarkCreateCompletedEventHandler BookmarkCreateCompleted;

        /// <remarks/>
        public event BookmarkUpdateCompletedEventHandler BookmarkUpdateCompleted;

        /// <remarks/>
        public event BookmarkDeleteCompletedEventHandler BookmarkDeleteCompleted;

        /// <remarks/>
        public event BookmarkGetCompletedEventHandler BookmarkGetCompleted;

        /// <remarks/>
        public event BookmarkSearchTimeCompletedEventHandler BookmarkSearchTimeCompleted;

        /// <remarks/>
        public event BookmarkSearchFromBookmarkCompletedEventHandler BookmarkSearchFromBookmarkCompleted;

        /// <remarks/>
        public event QuerySystemMonitorStateSourcesByIdsCompletedEventHandler QuerySystemMonitorStateSourcesByIdsCompleted;

        /// <remarks/>
        public event QuerySystemMonitorStateSourcesByTypesCompletedEventHandler QuerySystemMonitorStateSourcesByTypesCompleted;

        /// <remarks/>
        public event MarkedDataGetNewReferenceCompletedEventHandler MarkedDataGetNewReferenceCompleted;

        /// <remarks/>
        public event MarkedDataCreateCompletedEventHandler MarkedDataCreateCompleted;

        /// <remarks/>
        public event MarkedDataUpdateCompletedEventHandler MarkedDataUpdateCompleted;

        /// <remarks/>
        public event MarkedDataDeleteCompletedEventHandler MarkedDataDeleteCompleted;

        /// <remarks/>
        public event MarkedDataGetCompletedEventHandler MarkedDataGetCompleted;

        /// <remarks/>
        public event MarkedDataSearchCompletedEventHandler MarkedDataSearchCompleted;

        /// <remarks/>
        public event GetClientProfileCompletedEventHandler GetClientProfileCompleted;

        /// <remarks/>
        public event GetPresetsCompletedEventHandler GetPresetsCompleted;

        /// <remarks/>
        public event DeletePresetCompletedEventHandler DeletePresetCompleted;

        /// <remarks/>
        public event UpdatePresetNameCompletedEventHandler UpdatePresetNameCompleted;

        /// <remarks/>
        public event UpdatePresetPositionCompletedEventHandler UpdatePresetPositionCompleted;

        /// <remarks/>
        public event CreatePresetCompletedEventHandler CreatePresetCompleted;

        /// <remarks/>
        public event OrderPresetsCompletedEventHandler OrderPresetsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetVersion", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVersion()
        {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndGetVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetVersionAsync()
        {
            this.GetVersionAsync(null);
        }

        /// <remarks/>
        public void GetVersionAsync(object userState)
        {
            if ((this.GetVersionOperationCompleted == null))
            {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }

        private void OnGetVersionOperationCompleted(object arg)
        {
            if ((this.GetVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetServerVersion", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerVersion()
        {
            object[] results = this.Invoke("GetServerVersion", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetServerVersion(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetServerVersion", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetServerVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetServerVersionAsync()
        {
            this.GetServerVersionAsync(null);
        }

        /// <remarks/>
        public void GetServerVersionAsync(object userState)
        {
            if ((this.GetServerVersionOperationCompleted == null))
            {
                this.GetServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetServerVersion", new object[0], this.GetServerVersionOperationCompleted, userState);
        }

        private void OnGetServerVersionOperationCompleted(object arg)
        {
            if ((this.GetServerVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerVersionCompleted(this, new GetServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetProductInfo", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInfo GetProductInfo()
        {
            object[] results = this.Invoke("GetProductInfo", new object[0]);
            return ((ProductInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetProductInfo(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetProductInfo", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public ProductInfo EndGetProductInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProductInfo)(results[0]));
        }

        /// <remarks/>
        public void GetProductInfoAsync()
        {
            this.GetProductInfoAsync(null);
        }

        /// <remarks/>
        public void GetProductInfoAsync(object userState)
        {
            if ((this.GetProductInfoOperationCompleted == null))
            {
                this.GetProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductInfoOperationCompleted);
            }
            this.InvokeAsync("GetProductInfo", new object[0], this.GetProductInfoOperationCompleted, userState);
        }

        private void OnGetProductInfoOperationCompleted(object arg)
        {
            if ((this.GetProductInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductInfoCompleted(this, new GetProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetSystemLicenseInfo", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemLicenseInfo GetSystemLicenseInfo()
        {
            object[] results = this.Invoke("GetSystemLicenseInfo", new object[0]);
            return ((SystemLicenseInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSystemLicenseInfo(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSystemLicenseInfo", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public SystemLicenseInfo EndGetSystemLicenseInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemLicenseInfo)(results[0]));
        }

        /// <remarks/>
        public void GetSystemLicenseInfoAsync()
        {
            this.GetSystemLicenseInfoAsync(null);
        }

        /// <remarks/>
        public void GetSystemLicenseInfoAsync(object userState)
        {
            if ((this.GetSystemLicenseInfoOperationCompleted == null))
            {
                this.GetSystemLicenseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemLicenseInfoOperationCompleted);
            }
            this.InvokeAsync("GetSystemLicenseInfo", new object[0], this.GetSystemLicenseInfoOperationCompleted, userState);
        }

        private void OnGetSystemLicenseInfoOperationCompleted(object arg)
        {
            if ((this.GetSystemLicenseInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemLicenseInfoCompleted(this, new GetSystemLicenseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetSmartClientVersion", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SmartClientVersion GetSmartClientVersion()
        {
            object[] results = this.Invoke("GetSmartClientVersion", new object[0]);
            return ((SmartClientVersion)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSmartClientVersion(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSmartClientVersion", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public SmartClientVersion EndGetSmartClientVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartClientVersion)(results[0]));
        }

        /// <remarks/>
        public void GetSmartClientVersionAsync()
        {
            this.GetSmartClientVersionAsync(null);
        }

        /// <remarks/>
        public void GetSmartClientVersionAsync(object userState)
        {
            if ((this.GetSmartClientVersionOperationCompleted == null))
            {
                this.GetSmartClientVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmartClientVersionOperationCompleted);
            }
            this.InvokeAsync("GetSmartClientVersion", new object[0], this.GetSmartClientVersionOperationCompleted, userState);
        }

        private void OnGetSmartClientVersionOperationCompleted(object arg)
        {
            if ((this.GetSmartClientVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmartClientVersionCompleted(this, new GetSmartClientVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/CheckSmartClientVersion", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SmartClientVersion CheckSmartClientVersion(int major, int minor, string revision)
        {
            object[] results = this.Invoke("CheckSmartClientVersion", new object[] {
                        major,
                        minor,
                        revision});
            return ((SmartClientVersion)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckSmartClientVersion(int major, int minor, string revision, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckSmartClientVersion", new object[] {
                        major,
                        minor,
                        revision}, callback, asyncState);
        }

        /// <remarks/>
        public SmartClientVersion EndCheckSmartClientVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SmartClientVersion)(results[0]));
        }

        /// <remarks/>
        public void CheckSmartClientVersionAsync(int major, int minor, string revision)
        {
            this.CheckSmartClientVersionAsync(major, minor, revision, null);
        }

        /// <remarks/>
        public void CheckSmartClientVersionAsync(int major, int minor, string revision, object userState)
        {
            if ((this.CheckSmartClientVersionOperationCompleted == null))
            {
                this.CheckSmartClientVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSmartClientVersionOperationCompleted);
            }
            this.InvokeAsync("CheckSmartClientVersion", new object[] {
                        major,
                        minor,
                        revision}, this.CheckSmartClientVersionOperationCompleted, userState);
        }

        private void OnCheckSmartClientVersionOperationCompleted(object arg)
        {
            if ((this.CheckSmartClientVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSmartClientVersionCompleted(this, new CheckSmartClientVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/IsOnline", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOnline()
        {
            object[] results = this.Invoke("IsOnline", new object[0]);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsOnline(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsOnline", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsOnline(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsOnlineAsync()
        {
            this.IsOnlineAsync(null);
        }

        /// <remarks/>
        public void IsOnlineAsync(object userState)
        {
            if ((this.IsOnlineOperationCompleted == null))
            {
                this.IsOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOnlineOperationCompleted);
            }
            this.InvokeAsync("IsOnline", new object[0], this.IsOnlineOperationCompleted, userState);
        }

        private void OnIsOnlineOperationCompleted(object arg)
        {
            if ((this.IsOnlineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOnlineCompleted(this, new IsOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/Login", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoginInfo Login(System.Guid instanceId, string currentToken)
        {
            object[] results = this.Invoke("Login", new object[] {
                        instanceId,
                        currentToken});
            return ((LoginInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginLogin(System.Guid instanceId, string currentToken, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Login", new object[] {
                        instanceId,
                        currentToken}, callback, asyncState);
        }

        /// <remarks/>
        public LoginInfo EndLogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LoginInfo)(results[0]));
        }

        /// <remarks/>
        public void LoginAsync(System.Guid instanceId, string currentToken)
        {
            this.LoginAsync(instanceId, currentToken, null);
        }

        /// <remarks/>
        public void LoginAsync(System.Guid instanceId, string currentToken, object userState)
        {
            if ((this.LoginOperationCompleted == null))
            {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        instanceId,
                        currentToken}, this.LoginOperationCompleted, userState);
        }

        private void OnLoginOperationCompleted(object arg)
        {
            if ((this.LoginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/Logout", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout(System.Guid instanceId, string currentToken)
        {
            this.Invoke("Logout", new object[] {
                        instanceId,
                        currentToken});
        }

        /// <remarks/>
        public System.IAsyncResult BeginLogout(System.Guid instanceId, string currentToken, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Logout", new object[] {
                        instanceId,
                        currentToken}, callback, asyncState);
        }

        /// <remarks/>
        public void EndLogout(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void LogoutAsync(System.Guid instanceId, string currentToken)
        {
            this.LogoutAsync(instanceId, currentToken, null);
        }

        /// <remarks/>
        public void LogoutAsync(System.Guid instanceId, string currentToken, object userState)
        {
            if ((this.LogoutOperationCompleted == null))
            {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        instanceId,
                        currentToken}, this.LogoutOperationCompleted, userState);
        }

        private void OnLogoutOperationCompleted(object arg)
        {
            if ((this.LogoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetUserInfo", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo GetUserInfo(string token)
        {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        token});
            return ((UserInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserInfo(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserInfo", new object[] {
                        token}, callback, asyncState);
        }

        /// <remarks/>
        public UserInfo EndGetUserInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserInfo)(results[0]));
        }

        /// <remarks/>
        public void GetUserInfoAsync(string token)
        {
            this.GetUserInfoAsync(token, null);
        }

        /// <remarks/>
        public void GetUserInfoAsync(string token, object userState)
        {
            if ((this.GetUserInfoOperationCompleted == null))
            {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        token}, this.GetUserInfoOperationCompleted, userState);
        }

        private void OnGetUserInfoOperationCompleted(object arg)
        {
            if ((this.GetUserInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetConfiguration", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfigurationInfo GetConfiguration(string token)
        {
            object[] results = this.Invoke("GetConfiguration", new object[] {
                        token});
            return ((ConfigurationInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConfiguration(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConfiguration", new object[] {
                        token}, callback, asyncState);
        }

        /// <remarks/>
        public ConfigurationInfo EndGetConfiguration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ConfigurationInfo)(results[0]));
        }

        /// <remarks/>
        public void GetConfigurationAsync(string token)
        {
            this.GetConfigurationAsync(token, null);
        }

        /// <remarks/>
        public void GetConfigurationAsync(string token, object userState)
        {
            if ((this.GetConfigurationOperationCompleted == null))
            {
                this.GetConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetConfiguration", new object[] {
                        token}, this.GetConfigurationOperationCompleted, userState);
        }

        private void OnGetConfigurationOperationCompleted(object arg)
        {
            if ((this.GetConfigurationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationCompleted(this, new GetConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetConfigurationRecorders", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecorderInfo[] GetConfigurationRecorders(string token, System.Guid[] recorderIds)
        {
            object[] results = this.Invoke("GetConfigurationRecorders", new object[] {
                        token,
                        recorderIds});
            return ((RecorderInfo[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConfigurationRecorders(string token, System.Guid[] recorderIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConfigurationRecorders", new object[] {
                        token,
                        recorderIds}, callback, asyncState);
        }

        /// <remarks/>
        public RecorderInfo[] EndGetConfigurationRecorders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RecorderInfo[])(results[0]));
        }

        /// <remarks/>
        public void GetConfigurationRecordersAsync(string token, System.Guid[] recorderIds)
        {
            this.GetConfigurationRecordersAsync(token, recorderIds, null);
        }

        /// <remarks/>
        public void GetConfigurationRecordersAsync(string token, System.Guid[] recorderIds, object userState)
        {
            if ((this.GetConfigurationRecordersOperationCompleted == null))
            {
                this.GetConfigurationRecordersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationRecordersOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationRecorders", new object[] {
                        token,
                        recorderIds}, this.GetConfigurationRecordersOperationCompleted, userState);
        }

        private void OnGetConfigurationRecordersOperationCompleted(object arg)
        {
            if ((this.GetConfigurationRecordersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationRecordersCompleted(this, new GetConfigurationRecordersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetConfigurationHardware", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HardwareInfo[] GetConfigurationHardware(string token, System.Guid[] hardwareIds)
        {
            object[] results = this.Invoke("GetConfigurationHardware", new object[] {
                        token,
                        hardwareIds});
            return ((HardwareInfo[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetConfigurationHardware(string token, System.Guid[] hardwareIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetConfigurationHardware", new object[] {
                        token,
                        hardwareIds}, callback, asyncState);
        }

        /// <remarks/>
        public HardwareInfo[] EndGetConfigurationHardware(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((HardwareInfo[])(results[0]));
        }

        /// <remarks/>
        public void GetConfigurationHardwareAsync(string token, System.Guid[] hardwareIds)
        {
            this.GetConfigurationHardwareAsync(token, hardwareIds, null);
        }

        /// <remarks/>
        public void GetConfigurationHardwareAsync(string token, System.Guid[] hardwareIds, object userState)
        {
            if ((this.GetConfigurationHardwareOperationCompleted == null))
            {
                this.GetConfigurationHardwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationHardwareOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationHardware", new object[] {
                        token,
                        hardwareIds}, this.GetConfigurationHardwareOperationCompleted, userState);
        }

        private void OnGetConfigurationHardwareOperationCompleted(object arg)
        {
            if ((this.GetConfigurationHardwareCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationHardwareCompleted(this, new GetConfigurationHardwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetDevicesDisabled", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeviceDisabledInfo[] GetDevicesDisabled(string token)
        {
            object[] results = this.Invoke("GetDevicesDisabled", new object[] {
                        token});
            return ((DeviceDisabledInfo[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDevicesDisabled(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDevicesDisabled", new object[] {
                        token}, callback, asyncState);
        }

        /// <remarks/>
        public DeviceDisabledInfo[] EndGetDevicesDisabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeviceDisabledInfo[])(results[0]));
        }

        /// <remarks/>
        public void GetDevicesDisabledAsync(string token)
        {
            this.GetDevicesDisabledAsync(token, null);
        }

        /// <remarks/>
        public void GetDevicesDisabledAsync(string token, object userState)
        {
            if ((this.GetDevicesDisabledOperationCompleted == null))
            {
                this.GetDevicesDisabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDevicesDisabledOperationCompleted);
            }
            this.InvokeAsync("GetDevicesDisabled", new object[] {
                        token}, this.GetDevicesDisabledOperationCompleted, userState);
        }

        private void OnGetDevicesDisabledOperationCompleted(object arg)
        {
            if ((this.GetDevicesDisabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDevicesDisabledCompleted(this, new GetDevicesDisabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetVmoServicesList", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public DictionaryEntry[] GetVmoServicesList()
        {
            object[] results = this.Invoke("GetVmoServicesList", new object[0]);
            return ((DictionaryEntry[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetVmoServicesList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetVmoServicesList", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public DictionaryEntry[] EndGetVmoServicesList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DictionaryEntry[])(results[0]));
        }

        /// <remarks/>
        public void GetVmoServicesListAsync()
        {
            this.GetVmoServicesListAsync(null);
        }

        /// <remarks/>
        public void GetVmoServicesListAsync(object userState)
        {
            if ((this.GetVmoServicesListOperationCompleted == null))
            {
                this.GetVmoServicesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVmoServicesListOperationCompleted);
            }
            this.InvokeAsync("GetVmoServicesList", new object[0], this.GetVmoServicesListOperationCompleted, userState);
        }

        private void OnGetVmoServicesListOperationCompleted(object arg)
        {
            if ((this.GetVmoServicesListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVmoServicesListCompleted(this, new GetVmoServicesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetViewGroups", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ViewGroupInfo[] GetViewGroups(string token)
        {
            object[] results = this.Invoke("GetViewGroups", new object[] {
                        token});
            return ((ViewGroupInfo[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetViewGroups(string token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetViewGroups", new object[] {
                        token}, callback, asyncState);
        }

        /// <remarks/>
        public ViewGroupInfo[] EndGetViewGroups(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ViewGroupInfo[])(results[0]));
        }

        /// <remarks/>
        public void GetViewGroupsAsync(string token)
        {
            this.GetViewGroupsAsync(token, null);
        }

        /// <remarks/>
        public void GetViewGroupsAsync(string token, object userState)
        {
            if ((this.GetViewGroupsOperationCompleted == null))
            {
                this.GetViewGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewGroupsOperationCompleted);
            }
            this.InvokeAsync("GetViewGroups", new object[] {
                        token}, this.GetViewGroupsOperationCompleted, userState);
        }

        private void OnGetViewGroupsOperationCompleted(object arg)
        {
            if ((this.GetViewGroupsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewGroupsCompleted(this, new GetViewGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetViewGroupData", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ViewGroup GetViewGroupData(string token, System.Guid viewGroupId)
        {
            object[] results = this.Invoke("GetViewGroupData", new object[] {
                        token,
                        viewGroupId});
            return ((ViewGroup)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetViewGroupData(string token, System.Guid viewGroupId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetViewGroupData", new object[] {
                        token,
                        viewGroupId}, callback, asyncState);
        }

        /// <remarks/>
        public ViewGroup EndGetViewGroupData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ViewGroup)(results[0]));
        }

        /// <remarks/>
        public void GetViewGroupDataAsync(string token, System.Guid viewGroupId)
        {
            this.GetViewGroupDataAsync(token, viewGroupId, null);
        }

        /// <remarks/>
        public void GetViewGroupDataAsync(string token, System.Guid viewGroupId, object userState)
        {
            if ((this.GetViewGroupDataOperationCompleted == null))
            {
                this.GetViewGroupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewGroupDataOperationCompleted);
            }
            this.InvokeAsync("GetViewGroupData", new object[] {
                        token,
                        viewGroupId}, this.GetViewGroupDataOperationCompleted, userState);
        }

        private void OnGetViewGroupDataOperationCompleted(object arg)
        {
            if ((this.GetViewGroupDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewGroupDataCompleted(this, new GetViewGroupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/SetViewGroupData", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetViewGroupDataResultType SetViewGroupData(string token, System.Guid viewGroupId, ViewGroupData viewGroupdata)
        {
            object[] results = this.Invoke("SetViewGroupData", new object[] {
                        token,
                        viewGroupId,
                        viewGroupdata});
            return ((SetViewGroupDataResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetViewGroupData(string token, System.Guid viewGroupId, ViewGroupData viewGroupdata, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetViewGroupData", new object[] {
                        token,
                        viewGroupId,
                        viewGroupdata}, callback, asyncState);
        }

        /// <remarks/>
        public SetViewGroupDataResultType EndSetViewGroupData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SetViewGroupDataResultType)(results[0]));
        }

        /// <remarks/>
        public void SetViewGroupDataAsync(string token, System.Guid viewGroupId, ViewGroupData viewGroupdata)
        {
            this.SetViewGroupDataAsync(token, viewGroupId, viewGroupdata, null);
        }

        /// <remarks/>
        public void SetViewGroupDataAsync(string token, System.Guid viewGroupId, ViewGroupData viewGroupdata, object userState)
        {
            if ((this.SetViewGroupDataOperationCompleted == null))
            {
                this.SetViewGroupDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetViewGroupDataOperationCompleted);
            }
            this.InvokeAsync("SetViewGroupData", new object[] {
                        token,
                        viewGroupId,
                        viewGroupdata}, this.SetViewGroupDataOperationCompleted, userState);
        }

        private void OnSetViewGroupDataOperationCompleted(object arg)
        {
            if ((this.SetViewGroupDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetViewGroupDataCompleted(this, new SetViewGroupDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetCustomSettingDataGlobal", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomSetting GetCustomSettingDataGlobal(string token, System.Guid customSettingId)
        {
            object[] results = this.Invoke("GetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId});
            return ((CustomSetting)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomSettingDataGlobal(string token, System.Guid customSettingId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId}, callback, asyncState);
        }

        /// <remarks/>
        public CustomSetting EndGetCustomSettingDataGlobal(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CustomSetting)(results[0]));
        }

        /// <remarks/>
        public void GetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId)
        {
            this.GetCustomSettingDataGlobalAsync(token, customSettingId, null);
        }

        /// <remarks/>
        public void GetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId, object userState)
        {
            if ((this.GetCustomSettingDataGlobalOperationCompleted == null))
            {
                this.GetCustomSettingDataGlobalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomSettingDataGlobalOperationCompleted);
            }
            this.InvokeAsync("GetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId}, this.GetCustomSettingDataGlobalOperationCompleted, userState);
        }

        private void OnGetCustomSettingDataGlobalOperationCompleted(object arg)
        {
            if ((this.GetCustomSettingDataGlobalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomSettingDataGlobalCompleted(this, new GetCustomSettingDataGlobalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetCustomSettingDataUser", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomSetting GetCustomSettingDataUser(string token, System.Guid customSettingId)
        {
            object[] results = this.Invoke("GetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId});
            return ((CustomSetting)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomSettingDataUser(string token, System.Guid customSettingId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId}, callback, asyncState);
        }

        /// <remarks/>
        public CustomSetting EndGetCustomSettingDataUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((CustomSetting)(results[0]));
        }

        /// <remarks/>
        public void GetCustomSettingDataUserAsync(string token, System.Guid customSettingId)
        {
            this.GetCustomSettingDataUserAsync(token, customSettingId, null);
        }

        /// <remarks/>
        public void GetCustomSettingDataUserAsync(string token, System.Guid customSettingId, object userState)
        {
            if ((this.GetCustomSettingDataUserOperationCompleted == null))
            {
                this.GetCustomSettingDataUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomSettingDataUserOperationCompleted);
            }
            this.InvokeAsync("GetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId}, this.GetCustomSettingDataUserOperationCompleted, userState);
        }

        private void OnGetCustomSettingDataUserOperationCompleted(object arg)
        {
            if ((this.GetCustomSettingDataUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomSettingDataUserCompleted(this, new GetCustomSettingDataUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/SetCustomSettingDataGlobal", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetCustomSettingResultType SetCustomSettingDataGlobal(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride)
        {
            object[] results = this.Invoke("SetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride});
            return ((SetCustomSettingResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetCustomSettingDataGlobal(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride}, callback, asyncState);
        }

        /// <remarks/>
        public SetCustomSettingResultType EndSetCustomSettingDataGlobal(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SetCustomSettingResultType)(results[0]));
        }

        /// <remarks/>
        public void SetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride)
        {
            this.SetCustomSettingDataGlobalAsync(token, customSettingId, customSettingData, forceOverride, null);
        }

        /// <remarks/>
        public void SetCustomSettingDataGlobalAsync(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride, object userState)
        {
            if ((this.SetCustomSettingDataGlobalOperationCompleted == null))
            {
                this.SetCustomSettingDataGlobalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustomSettingDataGlobalOperationCompleted);
            }
            this.InvokeAsync("SetCustomSettingDataGlobal", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride}, this.SetCustomSettingDataGlobalOperationCompleted, userState);
        }

        private void OnSetCustomSettingDataGlobalOperationCompleted(object arg)
        {
            if ((this.SetCustomSettingDataGlobalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCustomSettingDataGlobalCompleted(this, new SetCustomSettingDataGlobalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/SetCustomSettingDataUser", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetCustomSettingResultType SetCustomSettingDataUser(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride)
        {
            object[] results = this.Invoke("SetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride});
            return ((SetCustomSettingResultType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetCustomSettingDataUser(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride}, callback, asyncState);
        }

        /// <remarks/>
        public SetCustomSettingResultType EndSetCustomSettingDataUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SetCustomSettingResultType)(results[0]));
        }

        /// <remarks/>
        public void SetCustomSettingDataUserAsync(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride)
        {
            this.SetCustomSettingDataUserAsync(token, customSettingId, customSettingData, forceOverride, null);
        }

        /// <remarks/>
        public void SetCustomSettingDataUserAsync(string token, System.Guid customSettingId, CustomSettingData customSettingData, bool forceOverride, object userState)
        {
            if ((this.SetCustomSettingDataUserOperationCompleted == null))
            {
                this.SetCustomSettingDataUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCustomSettingDataUserOperationCompleted);
            }
            this.InvokeAsync("SetCustomSettingDataUser", new object[] {
                        token,
                        customSettingId,
                        customSettingData,
                        forceOverride}, this.SetCustomSettingDataUserOperationCompleted, userState);
        }

        private void OnSetCustomSettingDataUserOperationCompleted(object arg)
        {
            if ((this.SetCustomSettingDataUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCustomSettingDataUserCompleted(this, new SetCustomSettingDataUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/EventTrigger", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EventTrigger(string token, System.Guid eventId)
        {
            this.Invoke("EventTrigger", new object[] {
                        token,
                        eventId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginEventTrigger(string token, System.Guid eventId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EventTrigger", new object[] {
                        token,
                        eventId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndEventTrigger(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void EventTriggerAsync(string token, System.Guid eventId)
        {
            this.EventTriggerAsync(token, eventId, null);
        }

        /// <remarks/>
        public void EventTriggerAsync(string token, System.Guid eventId, object userState)
        {
            if ((this.EventTriggerOperationCompleted == null))
            {
                this.EventTriggerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventTriggerOperationCompleted);
            }
            this.InvokeAsync("EventTrigger", new object[] {
                        token,
                        eventId}, this.EventTriggerOperationCompleted, userState);
        }

        private void OnEventTriggerOperationCompleted(object arg)
        {
            if ((this.EventTriggerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventTriggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/EventTriggerWithMetadata", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EventTriggerWithMetadata(string token, System.Guid eventId, KeyValue[] metadata)
        {
            this.Invoke("EventTriggerWithMetadata", new object[] {
                        token,
                        eventId,
                        metadata});
        }

        /// <remarks/>
        public System.IAsyncResult BeginEventTriggerWithMetadata(string token, System.Guid eventId, KeyValue[] metadata, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EventTriggerWithMetadata", new object[] {
                        token,
                        eventId,
                        metadata}, callback, asyncState);
        }

        /// <remarks/>
        public void EndEventTriggerWithMetadata(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void EventTriggerWithMetadataAsync(string token, System.Guid eventId, KeyValue[] metadata)
        {
            this.EventTriggerWithMetadataAsync(token, eventId, metadata, null);
        }

        /// <remarks/>
        public void EventTriggerWithMetadataAsync(string token, System.Guid eventId, KeyValue[] metadata, object userState)
        {
            if ((this.EventTriggerWithMetadataOperationCompleted == null))
            {
                this.EventTriggerWithMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventTriggerWithMetadataOperationCompleted);
            }
            this.InvokeAsync("EventTriggerWithMetadata", new object[] {
                        token,
                        eventId,
                        metadata}, this.EventTriggerWithMetadataOperationCompleted, userState);
        }

        private void OnEventTriggerWithMetadataOperationCompleted(object arg)
        {
            if ((this.EventTriggerWithMetadataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventTriggerWithMetadataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/AlertsGetAroundWithSpan", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AlertOccurrence[] AlertsGetAroundWithSpan(string token, System.Guid[] alertIds, System.DateTime centerTime, TimeDuration maxTimeBefore, int maxCountBefore, TimeDuration maxTimeAfter, int maxCountAfter)
        {
            object[] results = this.Invoke("AlertsGetAroundWithSpan", new object[] {
                        token,
                        alertIds,
                        centerTime,
                        maxTimeBefore,
                        maxCountBefore,
                        maxTimeAfter,
                        maxCountAfter});
            return ((AlertOccurrence[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAlertsGetAroundWithSpan(string token, System.Guid[] alertIds, System.DateTime centerTime, TimeDuration maxTimeBefore, int maxCountBefore, TimeDuration maxTimeAfter, int maxCountAfter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AlertsGetAroundWithSpan", new object[] {
                        token,
                        alertIds,
                        centerTime,
                        maxTimeBefore,
                        maxCountBefore,
                        maxTimeAfter,
                        maxCountAfter}, callback, asyncState);
        }

        /// <remarks/>
        public AlertOccurrence[] EndAlertsGetAroundWithSpan(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AlertOccurrence[])(results[0]));
        }

        /// <remarks/>
        public void AlertsGetAroundWithSpanAsync(string token, System.Guid[] alertIds, System.DateTime centerTime, TimeDuration maxTimeBefore, int maxCountBefore, TimeDuration maxTimeAfter, int maxCountAfter)
        {
            this.AlertsGetAroundWithSpanAsync(token, alertIds, centerTime, maxTimeBefore, maxCountBefore, maxTimeAfter, maxCountAfter, null);
        }

        /// <remarks/>
        public void AlertsGetAroundWithSpanAsync(string token, System.Guid[] alertIds, System.DateTime centerTime, TimeDuration maxTimeBefore, int maxCountBefore, TimeDuration maxTimeAfter, int maxCountAfter, object userState)
        {
            if ((this.AlertsGetAroundWithSpanOperationCompleted == null))
            {
                this.AlertsGetAroundWithSpanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlertsGetAroundWithSpanOperationCompleted);
            }
            this.InvokeAsync("AlertsGetAroundWithSpan", new object[] {
                        token,
                        alertIds,
                        centerTime,
                        maxTimeBefore,
                        maxCountBefore,
                        maxTimeAfter,
                        maxCountAfter}, this.AlertsGetAroundWithSpanOperationCompleted, userState);
        }

        private void OnAlertsGetAroundWithSpanOperationCompleted(object arg)
        {
            if ((this.AlertsGetAroundWithSpanCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlertsGetAroundWithSpanCompleted(this, new AlertsGetAroundWithSpanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MatrixMonitorActivateCamera", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MatrixMonitorActivateCamera(string token, System.Guid matrixMonitorId, System.Guid deviceId)
        {
            this.Invoke("MatrixMonitorActivateCamera", new object[] {
                        token,
                        matrixMonitorId,
                        deviceId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginMatrixMonitorActivateCamera(string token, System.Guid matrixMonitorId, System.Guid deviceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MatrixMonitorActivateCamera", new object[] {
                        token,
                        matrixMonitorId,
                        deviceId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndMatrixMonitorActivateCamera(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void MatrixMonitorActivateCameraAsync(string token, System.Guid matrixMonitorId, System.Guid deviceId)
        {
            this.MatrixMonitorActivateCameraAsync(token, matrixMonitorId, deviceId, null);
        }

        /// <remarks/>
        public void MatrixMonitorActivateCameraAsync(string token, System.Guid matrixMonitorId, System.Guid deviceId, object userState)
        {
            if ((this.MatrixMonitorActivateCameraOperationCompleted == null))
            {
                this.MatrixMonitorActivateCameraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatrixMonitorActivateCameraOperationCompleted);
            }
            this.InvokeAsync("MatrixMonitorActivateCamera", new object[] {
                        token,
                        matrixMonitorId,
                        deviceId}, this.MatrixMonitorActivateCameraOperationCompleted, userState);
        }

        private void OnMatrixMonitorActivateCameraOperationCompleted(object arg)
        {
            if ((this.MatrixMonitorActivateCameraCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatrixMonitorActivateCameraCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/QueryChanges", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Change[] QueryChanges(string token, System.DateTime changesFrom)
        {
            object[] results = this.Invoke("QueryChanges", new object[] {
                        token,
                        changesFrom});
            return ((Change[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQueryChanges(string token, System.DateTime changesFrom, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QueryChanges", new object[] {
                        token,
                        changesFrom}, callback, asyncState);
        }

        /// <remarks/>
        public Change[] EndQueryChanges(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Change[])(results[0]));
        }

        /// <remarks/>
        public void QueryChangesAsync(string token, System.DateTime changesFrom)
        {
            this.QueryChangesAsync(token, changesFrom, null);
        }

        /// <remarks/>
        public void QueryChangesAsync(string token, System.DateTime changesFrom, object userState)
        {
            if ((this.QueryChangesOperationCompleted == null))
            {
                this.QueryChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryChangesOperationCompleted);
            }
            this.InvokeAsync("QueryChanges", new object[] {
                        token,
                        changesFrom}, this.QueryChangesOperationCompleted, userState);
        }

        private void OnQueryChangesOperationCompleted(object arg)
        {
            if ((this.QueryChangesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryChangesCompleted(this, new QueryChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/QueryRecorderInfo", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecorderInfo QueryRecorderInfo(string token, System.Guid recorderId)
        {
            object[] results = this.Invoke("QueryRecorderInfo", new object[] {
                        token,
                        recorderId});
            return ((RecorderInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQueryRecorderInfo(string token, System.Guid recorderId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QueryRecorderInfo", new object[] {
                        token,
                        recorderId}, callback, asyncState);
        }

        /// <remarks/>
        public RecorderInfo EndQueryRecorderInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RecorderInfo)(results[0]));
        }

        /// <remarks/>
        public void QueryRecorderInfoAsync(string token, System.Guid recorderId)
        {
            this.QueryRecorderInfoAsync(token, recorderId, null);
        }

        /// <remarks/>
        public void QueryRecorderInfoAsync(string token, System.Guid recorderId, object userState)
        {
            if ((this.QueryRecorderInfoOperationCompleted == null))
            {
                this.QueryRecorderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRecorderInfoOperationCompleted);
            }
            this.InvokeAsync("QueryRecorderInfo", new object[] {
                        token,
                        recorderId}, this.QueryRecorderInfoOperationCompleted, userState);
        }

        private void OnQueryRecorderInfoOperationCompleted(object arg)
        {
            if ((this.QueryRecorderInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRecorderInfoCompleted(this, new QueryRecorderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkGetNewReference", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BookmarkReference BookmarkGetNewReference(string token, System.Guid deviceId, bool live)
        {
            object[] results = this.Invoke("BookmarkGetNewReference", new object[] {
                        token,
                        deviceId,
                        live});
            return ((BookmarkReference)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkGetNewReference(string token, System.Guid deviceId, bool live, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkGetNewReference", new object[] {
                        token,
                        deviceId,
                        live}, callback, asyncState);
        }

        /// <remarks/>
        public BookmarkReference EndBookmarkGetNewReference(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BookmarkReference)(results[0]));
        }

        /// <remarks/>
        public void BookmarkGetNewReferenceAsync(string token, System.Guid deviceId, bool live)
        {
            this.BookmarkGetNewReferenceAsync(token, deviceId, live, null);
        }

        /// <remarks/>
        public void BookmarkGetNewReferenceAsync(string token, System.Guid deviceId, bool live, object userState)
        {
            if ((this.BookmarkGetNewReferenceOperationCompleted == null))
            {
                this.BookmarkGetNewReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkGetNewReferenceOperationCompleted);
            }
            this.InvokeAsync("BookmarkGetNewReference", new object[] {
                        token,
                        deviceId,
                        live}, this.BookmarkGetNewReferenceOperationCompleted, userState);
        }

        private void OnBookmarkGetNewReferenceOperationCompleted(object arg)
        {
            if ((this.BookmarkGetNewReferenceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkGetNewReferenceCompleted(this, new BookmarkGetNewReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkCreate", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bookmark BookmarkCreate(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description)
        {
            object[] results = this.Invoke("BookmarkCreate", new object[] {
                        token,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description});
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkCreate(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkCreate", new object[] {
                        token,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description}, callback, asyncState);
        }

        /// <remarks/>
        public Bookmark EndBookmarkCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public void BookmarkCreateAsync(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description)
        {
            this.BookmarkCreateAsync(token, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description, null);
        }

        /// <remarks/>
        public void BookmarkCreateAsync(string token, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description, object userState)
        {
            if ((this.BookmarkCreateOperationCompleted == null))
            {
                this.BookmarkCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkCreateOperationCompleted);
            }
            this.InvokeAsync("BookmarkCreate", new object[] {
                        token,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description}, this.BookmarkCreateOperationCompleted, userState);
        }

        private void OnBookmarkCreateOperationCompleted(object arg)
        {
            if ((this.BookmarkCreateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkCreateCompleted(this, new BookmarkCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkUpdate", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bookmark BookmarkUpdate(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description)
        {
            object[] results = this.Invoke("BookmarkUpdate", new object[] {
                        token,
                        bookmarkId,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description});
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkUpdate(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkUpdate", new object[] {
                        token,
                        bookmarkId,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description}, callback, asyncState);
        }

        /// <remarks/>
        public Bookmark EndBookmarkUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public void BookmarkUpdateAsync(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description)
        {
            this.BookmarkUpdateAsync(token, bookmarkId, deviceId, timeBegin, timeTrigged, timeEnd, reference, header, description, null);
        }

        /// <remarks/>
        public void BookmarkUpdateAsync(string token, System.Guid bookmarkId, System.Guid deviceId, System.DateTime timeBegin, System.DateTime timeTrigged, System.DateTime timeEnd, string reference, string header, string description, object userState)
        {
            if ((this.BookmarkUpdateOperationCompleted == null))
            {
                this.BookmarkUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkUpdateOperationCompleted);
            }
            this.InvokeAsync("BookmarkUpdate", new object[] {
                        token,
                        bookmarkId,
                        deviceId,
                        timeBegin,
                        timeTrigged,
                        timeEnd,
                        reference,
                        header,
                        description}, this.BookmarkUpdateOperationCompleted, userState);
        }

        private void OnBookmarkUpdateOperationCompleted(object arg)
        {
            if ((this.BookmarkUpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkUpdateCompleted(this, new BookmarkUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkDelete", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BookmarkDelete(string token, System.Guid bookmarkId)
        {
            this.Invoke("BookmarkDelete", new object[] {
                        token,
                        bookmarkId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkDelete(string token, System.Guid bookmarkId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkDelete", new object[] {
                        token,
                        bookmarkId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndBookmarkDelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void BookmarkDeleteAsync(string token, System.Guid bookmarkId)
        {
            this.BookmarkDeleteAsync(token, bookmarkId, null);
        }

        /// <remarks/>
        public void BookmarkDeleteAsync(string token, System.Guid bookmarkId, object userState)
        {
            if ((this.BookmarkDeleteOperationCompleted == null))
            {
                this.BookmarkDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkDeleteOperationCompleted);
            }
            this.InvokeAsync("BookmarkDelete", new object[] {
                        token,
                        bookmarkId}, this.BookmarkDeleteOperationCompleted, userState);
        }

        private void OnBookmarkDeleteOperationCompleted(object arg)
        {
            if ((this.BookmarkDeleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkGet", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bookmark BookmarkGet(string token, System.Guid bookmarkId)
        {
            object[] results = this.Invoke("BookmarkGet", new object[] {
                        token,
                        bookmarkId});
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkGet(string token, System.Guid bookmarkId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkGet", new object[] {
                        token,
                        bookmarkId}, callback, asyncState);
        }

        /// <remarks/>
        public Bookmark EndBookmarkGet(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Bookmark)(results[0]));
        }

        /// <remarks/>
        public void BookmarkGetAsync(string token, System.Guid bookmarkId)
        {
            this.BookmarkGetAsync(token, bookmarkId, null);
        }

        /// <remarks/>
        public void BookmarkGetAsync(string token, System.Guid bookmarkId, object userState)
        {
            if ((this.BookmarkGetOperationCompleted == null))
            {
                this.BookmarkGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkGetOperationCompleted);
            }
            this.InvokeAsync("BookmarkGet", new object[] {
                        token,
                        bookmarkId}, this.BookmarkGetOperationCompleted, userState);
        }

        private void OnBookmarkGetOperationCompleted(object arg)
        {
            if ((this.BookmarkGetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkGetCompleted(this, new BookmarkGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkSearchTime", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bookmark[] BookmarkSearchTime(string token, System.DateTime time, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr)
        {
            object[] results = this.Invoke("BookmarkSearchTime", new object[] {
                        token,
                        time,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr});
            return ((Bookmark[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkSearchTime(string token, System.DateTime time, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkSearchTime", new object[] {
                        token,
                        time,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr}, callback, asyncState);
        }

        /// <remarks/>
        public Bookmark[] EndBookmarkSearchTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Bookmark[])(results[0]));
        }

        /// <remarks/>
        public void BookmarkSearchTimeAsync(string token, System.DateTime time, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr)
        {
            this.BookmarkSearchTimeAsync(token, time, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr, null);
        }

        /// <remarks/>
        public void BookmarkSearchTimeAsync(string token, System.DateTime time, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr, object userState)
        {
            if ((this.BookmarkSearchTimeOperationCompleted == null))
            {
                this.BookmarkSearchTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkSearchTimeOperationCompleted);
            }
            this.InvokeAsync("BookmarkSearchTime", new object[] {
                        token,
                        time,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr}, this.BookmarkSearchTimeOperationCompleted, userState);
        }

        private void OnBookmarkSearchTimeOperationCompleted(object arg)
        {
            if ((this.BookmarkSearchTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkSearchTimeCompleted(this, new BookmarkSearchTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/BookmarkSearchFromBookmark", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Bookmark[] BookmarkSearchFromBookmark(string token, System.Guid fromBookmarkId, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr)
        {
            object[] results = this.Invoke("BookmarkSearchFromBookmark", new object[] {
                        token,
                        fromBookmarkId,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr});
            return ((Bookmark[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookmarkSearchFromBookmark(string token, System.Guid fromBookmarkId, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookmarkSearchFromBookmark", new object[] {
                        token,
                        fromBookmarkId,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr}, callback, asyncState);
        }

        /// <remarks/>
        public Bookmark[] EndBookmarkSearchFromBookmark(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Bookmark[])(results[0]));
        }

        /// <remarks/>
        public void BookmarkSearchFromBookmarkAsync(string token, System.Guid fromBookmarkId, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr)
        {
            this.BookmarkSearchFromBookmarkAsync(token, fromBookmarkId, timeLimit, countLimit, deviceTypes, optDeviceIds, optUsers, optSearchStr, null);
        }

        /// <remarks/>
        public void BookmarkSearchFromBookmarkAsync(string token, System.Guid fromBookmarkId, TimeDuration timeLimit, int countLimit, MediaDeviceType[] deviceTypes, System.Guid[] optDeviceIds, string[] optUsers, string optSearchStr, object userState)
        {
            if ((this.BookmarkSearchFromBookmarkOperationCompleted == null))
            {
                this.BookmarkSearchFromBookmarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookmarkSearchFromBookmarkOperationCompleted);
            }
            this.InvokeAsync("BookmarkSearchFromBookmark", new object[] {
                        token,
                        fromBookmarkId,
                        timeLimit,
                        countLimit,
                        deviceTypes,
                        optDeviceIds,
                        optUsers,
                        optSearchStr}, this.BookmarkSearchFromBookmarkOperationCompleted, userState);
        }

        private void OnBookmarkSearchFromBookmarkOperationCompleted(object arg)
        {
            if ((this.BookmarkSearchFromBookmarkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookmarkSearchFromBookmarkCompleted(this, new BookmarkSearchFromBookmarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/QuerySystemMonitorStateSourcesByIds", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemMonitorStateSource[] QuerySystemMonitorStateSourcesByIds(string[] ids)
        {
            object[] results = this.Invoke("QuerySystemMonitorStateSourcesByIds", new object[] {
                        ids});
            return ((SystemMonitorStateSource[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQuerySystemMonitorStateSourcesByIds(string[] ids, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QuerySystemMonitorStateSourcesByIds", new object[] {
                        ids}, callback, asyncState);
        }

        /// <remarks/>
        public SystemMonitorStateSource[] EndQuerySystemMonitorStateSourcesByIds(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemMonitorStateSource[])(results[0]));
        }

        /// <remarks/>
        public void QuerySystemMonitorStateSourcesByIdsAsync(string[] ids)
        {
            this.QuerySystemMonitorStateSourcesByIdsAsync(ids, null);
        }

        /// <remarks/>
        public void QuerySystemMonitorStateSourcesByIdsAsync(string[] ids, object userState)
        {
            if ((this.QuerySystemMonitorStateSourcesByIdsOperationCompleted == null))
            {
                this.QuerySystemMonitorStateSourcesByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySystemMonitorStateSourcesByIdsOperationCompleted);
            }
            this.InvokeAsync("QuerySystemMonitorStateSourcesByIds", new object[] {
                        ids}, this.QuerySystemMonitorStateSourcesByIdsOperationCompleted, userState);
        }

        private void OnQuerySystemMonitorStateSourcesByIdsOperationCompleted(object arg)
        {
            if ((this.QuerySystemMonitorStateSourcesByIdsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySystemMonitorStateSourcesByIdsCompleted(this, new QuerySystemMonitorStateSourcesByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/QuerySystemMonitorStateSourcesByType" +
            "s", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemMonitorStateSource[] QuerySystemMonitorStateSourcesByTypes(string[] types)
        {
            object[] results = this.Invoke("QuerySystemMonitorStateSourcesByTypes", new object[] {
                        types});
            return ((SystemMonitorStateSource[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQuerySystemMonitorStateSourcesByTypes(string[] types, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QuerySystemMonitorStateSourcesByTypes", new object[] {
                        types}, callback, asyncState);
        }

        /// <remarks/>
        public SystemMonitorStateSource[] EndQuerySystemMonitorStateSourcesByTypes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemMonitorStateSource[])(results[0]));
        }

        /// <remarks/>
        public void QuerySystemMonitorStateSourcesByTypesAsync(string[] types)
        {
            this.QuerySystemMonitorStateSourcesByTypesAsync(types, null);
        }

        /// <remarks/>
        public void QuerySystemMonitorStateSourcesByTypesAsync(string[] types, object userState)
        {
            if ((this.QuerySystemMonitorStateSourcesByTypesOperationCompleted == null))
            {
                this.QuerySystemMonitorStateSourcesByTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySystemMonitorStateSourcesByTypesOperationCompleted);
            }
            this.InvokeAsync("QuerySystemMonitorStateSourcesByTypes", new object[] {
                        types}, this.QuerySystemMonitorStateSourcesByTypesOperationCompleted, userState);
        }

        private void OnQuerySystemMonitorStateSourcesByTypesOperationCompleted(object arg)
        {
            if ((this.QuerySystemMonitorStateSourcesByTypesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySystemMonitorStateSourcesByTypesCompleted(this, new QuerySystemMonitorStateSourcesByTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataGetNewReference", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedDataReference MarkedDataGetNewReference(string token, System.Guid[] deviceIds, bool live)
        {
            object[] results = this.Invoke("MarkedDataGetNewReference", new object[] {
                        token,
                        deviceIds,
                        live});
            return ((MarkedDataReference)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataGetNewReference(string token, System.Guid[] deviceIds, bool live, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MarkedDataGetNewReference", new object[] {
                        token,
                        deviceIds,
                        live}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedDataReference EndMarkedDataGetNewReference(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedDataReference)(results[0]));
        }

        /// <remarks/>
        public void MarkedDataGetNewReferenceAsync(string token, System.Guid[] deviceIds, bool live)
        {
            this.MarkedDataGetNewReferenceAsync(token, deviceIds, live, null);
        }

        /// <remarks/>
        public void MarkedDataGetNewReferenceAsync(string token, System.Guid[] deviceIds, bool live, object userState)
        {
            if ((this.MarkedDataGetNewReferenceOperationCompleted == null))
            {
                this.MarkedDataGetNewReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataGetNewReferenceOperationCompleted);
            }
            this.InvokeAsync("MarkedDataGetNewReference", new object[] {
                        token,
                        deviceIds,
                        live}, this.MarkedDataGetNewReferenceOperationCompleted, userState);
        }

        private void OnMarkedDataGetNewReferenceOperationCompleted(object arg)
        {
            if ((this.MarkedDataGetNewReferenceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataGetNewReferenceCompleted(this, new MarkedDataGetNewReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataCreate", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedDataResult MarkedDataCreate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption)
        {
            object[] results = this.Invoke("MarkedDataCreate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption});
            return ((MarkedDataResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataCreate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MarkedDataCreate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedDataResult EndMarkedDataCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedDataResult)(results[0]));
        }

        /// <remarks/>
        public void MarkedDataCreateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption)
        {
            this.MarkedDataCreateAsync(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption, null);
        }

        /// <remarks/>
        public void MarkedDataCreateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption, object userState)
        {
            if ((this.MarkedDataCreateOperationCompleted == null))
            {
                this.MarkedDataCreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataCreateOperationCompleted);
            }
            this.InvokeAsync("MarkedDataCreate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption}, this.MarkedDataCreateOperationCompleted, userState);
        }

        private void OnMarkedDataCreateOperationCompleted(object arg)
        {
            if ((this.MarkedDataCreateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataCreateCompleted(this, new MarkedDataCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataUpdate", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedDataResult MarkedDataUpdate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption)
        {
            object[] results = this.Invoke("MarkedDataUpdate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption});
            return ((MarkedDataResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataUpdate(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MarkedDataUpdate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedDataResult EndMarkedDataUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedDataResult)(results[0]));
        }

        /// <remarks/>
        public void MarkedDataUpdateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption)
        {
            this.MarkedDataUpdateAsync(token, markedDataId, deviceIds, timeStart, timeTag, timeEnd, reference, header, description, markedDataType, useRetention, retentionExpire, retentionOption, null);
        }

        /// <remarks/>
        public void MarkedDataUpdateAsync(string token, System.Guid markedDataId, System.Guid[] deviceIds, System.DateTime timeStart, System.DateTime timeTag, System.DateTime timeEnd, string reference, string header, string description, int markedDataType, bool useRetention, System.DateTime retentionExpire, RetentionOption retentionOption, object userState)
        {
            if ((this.MarkedDataUpdateOperationCompleted == null))
            {
                this.MarkedDataUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataUpdateOperationCompleted);
            }
            this.InvokeAsync("MarkedDataUpdate", new object[] {
                        token,
                        markedDataId,
                        deviceIds,
                        timeStart,
                        timeTag,
                        timeEnd,
                        reference,
                        header,
                        description,
                        markedDataType,
                        useRetention,
                        retentionExpire,
                        retentionOption}, this.MarkedDataUpdateOperationCompleted, userState);
        }

        private void OnMarkedDataUpdateOperationCompleted(object arg)
        {
            if ((this.MarkedDataUpdateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataUpdateCompleted(this, new MarkedDataUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataDelete", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedDataResult[] MarkedDataDelete(string token, System.Guid[] markedDataIds)
        {
            object[] results = this.Invoke("MarkedDataDelete", new object[] {
                        token,
                        markedDataIds});
            return ((MarkedDataResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataDelete(string token, System.Guid[] markedDataIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MarkedDataDelete", new object[] {
                        token,
                        markedDataIds}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedDataResult[] EndMarkedDataDelete(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedDataResult[])(results[0]));
        }

        /// <remarks/>
        public void MarkedDataDeleteAsync(string token, System.Guid[] markedDataIds)
        {
            this.MarkedDataDeleteAsync(token, markedDataIds, null);
        }

        /// <remarks/>
        public void MarkedDataDeleteAsync(string token, System.Guid[] markedDataIds, object userState)
        {
            if ((this.MarkedDataDeleteOperationCompleted == null))
            {
                this.MarkedDataDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataDeleteOperationCompleted);
            }
            this.InvokeAsync("MarkedDataDelete", new object[] {
                        token,
                        markedDataIds}, this.MarkedDataDeleteOperationCompleted, userState);
        }

        private void OnMarkedDataDeleteOperationCompleted(object arg)
        {
            if ((this.MarkedDataDeleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataDeleteCompleted(this, new MarkedDataDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataGet", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedData MarkedDataGet(string token, System.Guid markedDataId)
        {
            object[] results = this.Invoke("MarkedDataGet", new object[] {
                        token,
                        markedDataId});
            return ((MarkedData)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataGet(string token, System.Guid markedDataId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MarkedDataGet", new object[] {
                        token,
                        markedDataId}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedData EndMarkedDataGet(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedData)(results[0]));
        }

        /// <remarks/>
        public void MarkedDataGetAsync(string token, System.Guid markedDataId)
        {
            this.MarkedDataGetAsync(token, markedDataId, null);
        }

        /// <remarks/>
        public void MarkedDataGetAsync(string token, System.Guid markedDataId, object userState)
        {
            if ((this.MarkedDataGetOperationCompleted == null))
            {
                this.MarkedDataGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataGetOperationCompleted);
            }
            this.InvokeAsync("MarkedDataGet", new object[] {
                        token,
                        markedDataId}, this.MarkedDataGetOperationCompleted, userState);
        }

        private void OnMarkedDataGetOperationCompleted(object arg)
        {
            if ((this.MarkedDataGetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataGetCompleted(this, new MarkedDataGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/MarkedDataSearch", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MarkedData[] MarkedDataSearch(
                    string token,
                    System.Guid[] deviceIds,
                    string searchText,
                    string[] users,
                    System.DateTime createdFromTime,
                    System.DateTime createdToTime,
                    System.DateTime markedDataFromTime,
                    System.DateTime markedDataToTime,
                    System.DateTime tagTimeFromTime,
                    System.DateTime tagTimeToTime,
                    System.DateTime retentionExpireFrom,
                    System.DateTime retentionExpireTo,
                    int pageIndex,
                    int pageSize,
                    SortOrderOption sortOrder,
                    bool sortAscending)
        {
            object[] results = this.Invoke("MarkedDataSearch", new object[] {
                        token,
                        deviceIds,
                        searchText,
                        users,
                        createdFromTime,
                        createdToTime,
                        markedDataFromTime,
                        markedDataToTime,
                        tagTimeFromTime,
                        tagTimeToTime,
                        retentionExpireFrom,
                        retentionExpireTo,
                        pageIndex,
                        pageSize,
                        sortOrder,
                        sortAscending});
            return ((MarkedData[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMarkedDataSearch(
                    string token,
                    System.Guid[] deviceIds,
                    string searchText,
                    string[] users,
                    System.DateTime createdFromTime,
                    System.DateTime createdToTime,
                    System.DateTime markedDataFromTime,
                    System.DateTime markedDataToTime,
                    System.DateTime tagTimeFromTime,
                    System.DateTime tagTimeToTime,
                    System.DateTime retentionExpireFrom,
                    System.DateTime retentionExpireTo,
                    int pageIndex,
                    int pageSize,
                    SortOrderOption sortOrder,
                    bool sortAscending,
                    System.AsyncCallback callback,
                    object asyncState)
        {
            return this.BeginInvoke("MarkedDataSearch", new object[] {
                        token,
                        deviceIds,
                        searchText,
                        users,
                        createdFromTime,
                        createdToTime,
                        markedDataFromTime,
                        markedDataToTime,
                        tagTimeFromTime,
                        tagTimeToTime,
                        retentionExpireFrom,
                        retentionExpireTo,
                        pageIndex,
                        pageSize,
                        sortOrder,
                        sortAscending}, callback, asyncState);
        }

        /// <remarks/>
        public MarkedData[] EndMarkedDataSearch(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MarkedData[])(results[0]));
        }

        /// <remarks/>
        public void MarkedDataSearchAsync(
                    string token,
                    System.Guid[] deviceIds,
                    string searchText,
                    string[] users,
                    System.DateTime createdFromTime,
                    System.DateTime createdToTime,
                    System.DateTime markedDataFromTime,
                    System.DateTime markedDataToTime,
                    System.DateTime tagTimeFromTime,
                    System.DateTime tagTimeToTime,
                    System.DateTime retentionExpireFrom,
                    System.DateTime retentionExpireTo,
                    int pageIndex,
                    int pageSize,
                    SortOrderOption sortOrder,
                    bool sortAscending)
        {
            this.MarkedDataSearchAsync(token, deviceIds, searchText, users, createdFromTime, createdToTime, markedDataFromTime, markedDataToTime, tagTimeFromTime, tagTimeToTime, retentionExpireFrom, retentionExpireTo, pageIndex, pageSize, sortOrder, sortAscending, null);
        }

        /// <remarks/>
        public void MarkedDataSearchAsync(
                    string token,
                    System.Guid[] deviceIds,
                    string searchText,
                    string[] users,
                    System.DateTime createdFromTime,
                    System.DateTime createdToTime,
                    System.DateTime markedDataFromTime,
                    System.DateTime markedDataToTime,
                    System.DateTime tagTimeFromTime,
                    System.DateTime tagTimeToTime,
                    System.DateTime retentionExpireFrom,
                    System.DateTime retentionExpireTo,
                    int pageIndex,
                    int pageSize,
                    SortOrderOption sortOrder,
                    bool sortAscending,
                    object userState)
        {
            if ((this.MarkedDataSearchOperationCompleted == null))
            {
                this.MarkedDataSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkedDataSearchOperationCompleted);
            }
            this.InvokeAsync("MarkedDataSearch", new object[] {
                        token,
                        deviceIds,
                        searchText,
                        users,
                        createdFromTime,
                        createdToTime,
                        markedDataFromTime,
                        markedDataToTime,
                        tagTimeFromTime,
                        tagTimeToTime,
                        retentionExpireFrom,
                        retentionExpireTo,
                        pageIndex,
                        pageSize,
                        sortOrder,
                        sortAscending}, this.MarkedDataSearchOperationCompleted, userState);
        }

        private void OnMarkedDataSearchOperationCompleted(object arg)
        {
            if ((this.MarkedDataSearchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkedDataSearchCompleted(this, new MarkedDataSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetClientProfile", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientProfile GetClientProfile(string token, bool withSetting)
        {
            object[] results = this.Invoke("GetClientProfile", new object[] {
                        token,
                        withSetting});
            return ((ClientProfile)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetClientProfile(string token, bool withSetting, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetClientProfile", new object[] {
                        token,
                        withSetting}, callback, asyncState);
        }

        /// <remarks/>
        public ClientProfile EndGetClientProfile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ClientProfile)(results[0]));
        }

        /// <remarks/>
        public void GetClientProfileAsync(string token, bool withSetting)
        {
            this.GetClientProfileAsync(token, withSetting, null);
        }

        /// <remarks/>
        public void GetClientProfileAsync(string token, bool withSetting, object userState)
        {
            if ((this.GetClientProfileOperationCompleted == null))
            {
                this.GetClientProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientProfileOperationCompleted);
            }
            this.InvokeAsync("GetClientProfile", new object[] {
                        token,
                        withSetting}, this.GetClientProfileOperationCompleted, userState);
        }

        private void OnGetClientProfileOperationCompleted(object arg)
        {
            if ((this.GetClientProfileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientProfileCompleted(this, new GetClientProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/GetPresets", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PresetInfo[] GetPresets(string token, System.Guid deviceId)
        {
            object[] results = this.Invoke("GetPresets", new object[] {
                        token,
                        deviceId});
            return ((PresetInfo[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPresets(string token, System.Guid deviceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPresets", new object[] {
                        token,
                        deviceId}, callback, asyncState);
        }

        /// <remarks/>
        public PresetInfo[] EndGetPresets(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((PresetInfo[])(results[0]));
        }

        /// <remarks/>
        public void GetPresetsAsync(string token, System.Guid deviceId)
        {
            this.GetPresetsAsync(token, deviceId, null);
        }

        /// <remarks/>
        public void GetPresetsAsync(string token, System.Guid deviceId, object userState)
        {
            if ((this.GetPresetsOperationCompleted == null))
            {
                this.GetPresetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresetsOperationCompleted);
            }
            this.InvokeAsync("GetPresets", new object[] {
                        token,
                        deviceId}, this.GetPresetsOperationCompleted, userState);
        }

        private void OnGetPresetsOperationCompleted(object arg)
        {
            if ((this.GetPresetsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresetsCompleted(this, new GetPresetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/DeletePreset", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePreset(string token, System.Guid id, System.Guid deviceId)
        {
            this.Invoke("DeletePreset", new object[] {
                        token,
                        id,
                        deviceId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeletePreset(string token, System.Guid id, System.Guid deviceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeletePreset", new object[] {
                        token,
                        id,
                        deviceId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndDeletePreset(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void DeletePresetAsync(string token, System.Guid id, System.Guid deviceId)
        {
            this.DeletePresetAsync(token, id, deviceId, null);
        }

        /// <remarks/>
        public void DeletePresetAsync(string token, System.Guid id, System.Guid deviceId, object userState)
        {
            if ((this.DeletePresetOperationCompleted == null))
            {
                this.DeletePresetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePresetOperationCompleted);
            }
            this.InvokeAsync("DeletePreset", new object[] {
                        token,
                        id,
                        deviceId}, this.DeletePresetOperationCompleted, userState);
        }

        private void OnDeletePresetOperationCompleted(object arg)
        {
            if ((this.DeletePresetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePresetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/UpdatePresetName", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePresetName(string token, System.Guid id, System.Guid deviceId, string newName)
        {
            this.Invoke("UpdatePresetName", new object[] {
                        token,
                        id,
                        deviceId,
                        newName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdatePresetName(string token, System.Guid id, System.Guid deviceId, string newName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdatePresetName", new object[] {
                        token,
                        id,
                        deviceId,
                        newName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdatePresetName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdatePresetNameAsync(string token, System.Guid id, System.Guid deviceId, string newName)
        {
            this.UpdatePresetNameAsync(token, id, deviceId, newName, null);
        }

        /// <remarks/>
        public void UpdatePresetNameAsync(string token, System.Guid id, System.Guid deviceId, string newName, object userState)
        {
            if ((this.UpdatePresetNameOperationCompleted == null))
            {
                this.UpdatePresetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePresetNameOperationCompleted);
            }
            this.InvokeAsync("UpdatePresetName", new object[] {
                        token,
                        id,
                        deviceId,
                        newName}, this.UpdatePresetNameOperationCompleted, userState);
        }

        private void OnUpdatePresetNameOperationCompleted(object arg)
        {
            if ((this.UpdatePresetNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePresetNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/UpdatePresetPosition", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePresetPosition(string token, System.Guid id, System.Guid deviceId)
        {
            this.Invoke("UpdatePresetPosition", new object[] {
                        token,
                        id,
                        deviceId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdatePresetPosition(string token, System.Guid id, System.Guid deviceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdatePresetPosition", new object[] {
                        token,
                        id,
                        deviceId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndUpdatePresetPosition(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void UpdatePresetPositionAsync(string token, System.Guid id, System.Guid deviceId)
        {
            this.UpdatePresetPositionAsync(token, id, deviceId, null);
        }

        /// <remarks/>
        public void UpdatePresetPositionAsync(string token, System.Guid id, System.Guid deviceId, object userState)
        {
            if ((this.UpdatePresetPositionOperationCompleted == null))
            {
                this.UpdatePresetPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePresetPositionOperationCompleted);
            }
            this.InvokeAsync("UpdatePresetPosition", new object[] {
                        token,
                        id,
                        deviceId}, this.UpdatePresetPositionOperationCompleted, userState);
        }

        private void OnUpdatePresetPositionOperationCompleted(object arg)
        {
            if ((this.UpdatePresetPositionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePresetPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/CreatePreset", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid CreatePreset(string token, System.Guid deviceId, string name)
        {
            object[] results = this.Invoke("CreatePreset", new object[] {
                        token,
                        deviceId,
                        name});
            return ((System.Guid)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreatePreset(string token, System.Guid deviceId, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreatePreset", new object[] {
                        token,
                        deviceId,
                        name}, callback, asyncState);
        }

        /// <remarks/>
        public System.Guid EndCreatePreset(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Guid)(results[0]));
        }

        /// <remarks/>
        public void CreatePresetAsync(string token, System.Guid deviceId, string name)
        {
            this.CreatePresetAsync(token, deviceId, name, null);
        }

        /// <remarks/>
        public void CreatePresetAsync(string token, System.Guid deviceId, string name, object userState)
        {
            if ((this.CreatePresetOperationCompleted == null))
            {
                this.CreatePresetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePresetOperationCompleted);
            }
            this.InvokeAsync("CreatePreset", new object[] {
                        token,
                        deviceId,
                        name}, this.CreatePresetOperationCompleted, userState);
        }

        private void OnCreatePresetOperationCompleted(object arg)
        {
            if ((this.CreatePresetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePresetCompleted(this, new CreatePresetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://videoos.net/2/XProtectCSServerCommand/OrderPreset", RequestNamespace = "http://videoos.net/2/XProtectCSServerCommand", ResponseNamespace = "http://videoos.net/2/XProtectCSServerCommand", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OrderPresets(string token, System.Guid deviceId, System.Guid[] ids)
        {
            this.Invoke("OrderPresets", new object[] {
                        token,
                        deviceId,
                        ids});
        }

        /// <remarks/>
        public System.IAsyncResult BeginOrderPresets(string token, System.Guid deviceId, System.Guid[] ids, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("OrderPresets", new object[] {
                        token,
                        deviceId,
                        ids}, callback, asyncState);
        }

        /// <remarks/>
        public void EndOrderPresets(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void OrderPresetsAsync(string token, System.Guid deviceId, System.Guid[] ids)
        {
            this.OrderPresetsAsync(token, deviceId, ids, null);
        }

        /// <remarks/>
        public void OrderPresetsAsync(string token, System.Guid deviceId, System.Guid[] ids, object userState)
        {
            if ((this.OrderPresetsOperationCompleted == null))
            {
                this.OrderPresetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderPresetsOperationCompleted);
            }
            this.InvokeAsync("OrderPresets", new object[] {
                        token,
                        deviceId,
                        ids}, this.OrderPresetsOperationCompleted, userState);
        }

        private void OnOrderPresetsOperationCompleted(object arg)
        {
            if ((this.OrderPresetsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderPresetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ProductInfo
    {

        private string productNameField;

        private System.Guid productLineField;

        private System.Guid vendorIdField;

        private System.Guid subProductField;

        private string majorVersionField;

        private string minorVersionField;

        private string serviceVersionField;

        private string buildConfigurationField;

        private string buildNumberField;

        private System.DateTime buildDateField;

        private int productCodeField;

        private string sLCField;

        /// <remarks/>
        public string ProductName
        {
            get
            {
                return this.productNameField;
            }
            set
            {
                this.productNameField = value;
            }
        }

        /// <remarks/>
        public System.Guid ProductLine
        {
            get
            {
                return this.productLineField;
            }
            set
            {
                this.productLineField = value;
            }
        }

        /// <remarks/>
        public System.Guid VendorId
        {
            get
            {
                return this.vendorIdField;
            }
            set
            {
                this.vendorIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid SubProduct
        {
            get
            {
                return this.subProductField;
            }
            set
            {
                this.subProductField = value;
            }
        }

        /// <remarks/>
        public string MajorVersion
        {
            get
            {
                return this.majorVersionField;
            }
            set
            {
                this.majorVersionField = value;
            }
        }

        /// <remarks/>
        public string MinorVersion
        {
            get
            {
                return this.minorVersionField;
            }
            set
            {
                this.minorVersionField = value;
            }
        }

        /// <remarks/>
        public string ServiceVersion
        {
            get
            {
                return this.serviceVersionField;
            }
            set
            {
                this.serviceVersionField = value;
            }
        }

        /// <remarks/>
        public string BuildConfiguration
        {
            get
            {
                return this.buildConfigurationField;
            }
            set
            {
                this.buildConfigurationField = value;
            }
        }

        /// <remarks/>
        public string BuildNumber
        {
            get
            {
                return this.buildNumberField;
            }
            set
            {
                this.buildNumberField = value;
            }
        }

        /// <remarks/>
        public System.DateTime BuildDate
        {
            get
            {
                return this.buildDateField;
            }
            set
            {
                this.buildDateField = value;
            }
        }

        /// <remarks/>
        public int ProductCode
        {
            get
            {
                return this.productCodeField;
            }
            set
            {
                this.productCodeField = value;
            }
        }

        /// <remarks/>
        public string SLC
        {
            get
            {
                return this.sLCField;
            }
            set
            {
                this.sLCField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ClientProfileSetting
    {

        private string keyField;

        private string valueField;

        private bool lockedField;

        /// <remarks/>
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        public bool Locked
        {
            get
            {
                return this.lockedField;
            }
            set
            {
                this.lockedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ClientProfile
    {

        private System.Guid idField;

        private string nameField;

        private string descriptionField;

        private System.DateTime lastModifiedField;

        private System.DateTime settingsLastModifiedField;

        private ClientProfileSetting[] clientProfileSettingsField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime SettingsLastModified
        {
            get
            {
                return this.settingsLastModifiedField;
            }
            set
            {
                this.settingsLastModifiedField = value;
            }
        }

        /// <remarks/>
        public ClientProfileSetting[] ClientProfileSettings
        {
            get
            {
                return this.clientProfileSettingsField;
            }
            set
            {
                this.clientProfileSettingsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class FaultDevice
    {

        private System.Guid deviceIdField;

        private int errorCodeField;

        private string messageField;

        /// <remarks/>
        public System.Guid DeviceId
        {
            get
            {
                return this.deviceIdField;
            }
            set
            {
                this.deviceIdField = value;
            }
        }

        /// <remarks/>
        public int ErrorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MarkedData
    {

        private System.Guid idField;

        private System.Guid[] deviceIdsField;

        private System.DateTime createdField;

        private System.DateTime lastModifiedField;

        private string referenceField;

        private string headerField;

        private string descriptionField;

        private string userField;

        private System.DateTime startTimeField;

        private System.DateTime tagTimeField;

        private System.DateTime endTimeField;

        private bool useRetentionField;

        private System.DateTime retentionExpireField;

        private long retentionSizeField;

        private RetentionOption retentionOptionField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] DeviceIds
        {
            get
            {
                return this.deviceIdsField;
            }
            set
            {
                this.deviceIdsField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }

        /// <remarks/>
        public string Header
        {
            get
            {
                return this.headerField;
            }
            set
            {
                this.headerField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string User
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }

        /// <remarks/>
        public System.DateTime StartTime
        {
            get
            {
                return this.startTimeField;
            }
            set
            {
                this.startTimeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime TagTime
        {
            get
            {
                return this.tagTimeField;
            }
            set
            {
                this.tagTimeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime EndTime
        {
            get
            {
                return this.endTimeField;
            }
            set
            {
                this.endTimeField = value;
            }
        }

        /// <remarks/>
        public bool UseRetention
        {
            get
            {
                return this.useRetentionField;
            }
            set
            {
                this.useRetentionField = value;
            }
        }

        /// <remarks/>
        public System.DateTime RetentionExpire
        {
            get
            {
                return this.retentionExpireField;
            }
            set
            {
                this.retentionExpireField = value;
            }
        }

        /// <remarks/>
        public long RetentionSize
        {
            get
            {
                return this.retentionSizeField;
            }
            set
            {
                this.retentionSizeField = value;
            }
        }

        /// <remarks/>
        public RetentionOption RetentionOption
        {
            get
            {
                return this.retentionOptionField;
            }
            set
            {
                this.retentionOptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class RetentionOption
    {

        private int retentionUnitsField;

        private RetentionOptionType retentionOptionTypeField;

        /// <remarks/>
        public int RetentionUnits
        {
            get
            {
                return this.retentionUnitsField;
            }
            set
            {
                this.retentionUnitsField = value;
            }
        }

        /// <remarks/>
        public RetentionOptionType RetentionOptionType
        {
            get
            {
                return this.retentionOptionTypeField;
            }
            set
            {
                this.retentionOptionTypeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum RetentionOptionType
    {

        /// <remarks/>
        Unused,

        /// <remarks/>
        Days,

        /// <remarks/>
        Weeks,

        /// <remarks/>
        Months,

        /// <remarks/>
        Years,

        /// <remarks/>
        UserDefined,

        /// <remarks/>
        Indefinite,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MarkedDataResult
    {

        private MarkedData markedDataField;

        private FaultDevice[] faultDevicesField;

        private ResultStatus statusField;

        /// <remarks/>
        public MarkedData MarkedData
        {
            get
            {
                return this.markedDataField;
            }
            set
            {
                this.markedDataField = value;
            }
        }

        /// <remarks/>
        public FaultDevice[] FaultDevices
        {
            get
            {
                return this.faultDevicesField;
            }
            set
            {
                this.faultDevicesField = value;
            }
        }

        /// <remarks/>
        public ResultStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum ResultStatus
    {

        /// <remarks/>
        Undefined,

        /// <remarks/>
        Success,

        /// <remarks/>
        Failed,

        /// <remarks/>
        PartlySuccess,

        /// <remarks/>
        MarkedDataNotFound,

        /// <remarks/>
        FeatureNotLicensed,

        /// <remarks/>
        RecorderNotFound,

        /// <remarks/>
        ManagementServerUnavailable,

        /// <remarks/>
        Unauthorized,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MarkedDataReference
    {

        private string referenceField;

        private System.DateTime timeField;

        /// <remarks/>
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SystemMonitorStateSource
    {

        private string idField;

        private string nameField;

        /// <remarks/>
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class Bookmark
    {

        private System.Guid idField;

        private System.Guid deviceIdField;

        private string referenceField;

        private string headerField;

        private string descriptionField;

        private string userField;

        private System.DateTime timeBeginField;

        private System.DateTime timeTriggedField;

        private System.DateTime timeEndField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public System.Guid DeviceId
        {
            get
            {
                return this.deviceIdField;
            }
            set
            {
                this.deviceIdField = value;
            }
        }

        /// <remarks/>
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }

        /// <remarks/>
        public string Header
        {
            get
            {
                return this.headerField;
            }
            set
            {
                this.headerField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string User
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }

        /// <remarks/>
        public System.DateTime TimeBegin
        {
            get
            {
                return this.timeBeginField;
            }
            set
            {
                this.timeBeginField = value;
            }
        }

        /// <remarks/>
        public System.DateTime TimeTrigged
        {
            get
            {
                return this.timeTriggedField;
            }
            set
            {
                this.timeTriggedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime TimeEnd
        {
            get
            {
                return this.timeEndField;
            }
            set
            {
                this.timeEndField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class BookmarkReference
    {

        private string referenceField;

        private System.DateTime timeField;

        /// <remarks/>
        public string Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                this.referenceField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ChangeType
    {

        private bool recorderField;

        private bool hardwareField;

        /// <remarks/>
        public bool Recorder
        {
            get
            {
                return this.recorderField;
            }
            set
            {
                this.recorderField = value;
            }
        }

        /// <remarks/>
        public bool Hardware
        {
            get
            {
                return this.hardwareField;
            }
            set
            {
                this.hardwareField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class Change
    {

        private ChangeType changeTypeField;

        private string idField;

        private System.DateTime timeField;

        /// <remarks/>
        public ChangeType ChangeType
        {
            get
            {
                return this.changeTypeField;
            }
            set
            {
                this.changeTypeField = value;
            }
        }

        /// <remarks/>
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class AlertOccurrence
    {

        private System.Guid alertIdField;

        private System.DateTime timeField;

        /// <remarks/>
        public System.Guid AlertId
        {
            get
            {
                return this.alertIdField;
            }
            set
            {
                this.alertIdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class KeyValue
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CustomSettingData
    {

        private int dataVersionField;

        private System.Xml.XmlNode customSettingDataXmlField;

        /// <remarks/>
        public int DataVersion
        {
            get
            {
                return this.dataVersionField;
            }
            set
            {
                this.dataVersionField = value;
            }
        }

        /// <remarks/>
        public System.Xml.XmlNode CustomSettingDataXml
        {
            get
            {
                return this.customSettingDataXmlField;
            }
            set
            {
                this.customSettingDataXmlField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CustomSettingInfo
    {

        private System.Guid idField;

        private System.DateTime lastModifiedTimeField;

        private string lastModifiedUserField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModifiedTime
        {
            get
            {
                return this.lastModifiedTimeField;
            }
            set
            {
                this.lastModifiedTimeField = value;
            }
        }

        /// <remarks/>
        public string LastModifiedUser
        {
            get
            {
                return this.lastModifiedUserField;
            }
            set
            {
                this.lastModifiedUserField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CustomSetting
    {

        private CustomSettingInfo customSettingInfoField;

        private CustomSettingData customSettingDataField;

        /// <remarks/>
        public CustomSettingInfo CustomSettingInfo
        {
            get
            {
                return this.customSettingInfoField;
            }
            set
            {
                this.customSettingInfoField = value;
            }
        }

        /// <remarks/>
        public CustomSettingData CustomSettingData
        {
            get
            {
                return this.customSettingDataField;
            }
            set
            {
                this.customSettingDataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ViewGroupData
    {

        private int dataVersionField;

        private int xmlVersionField;

        private System.Xml.XmlNode viewGroupDataXmlField;

        /// <remarks/>
        public int DataVersion
        {
            get
            {
                return this.dataVersionField;
            }
            set
            {
                this.dataVersionField = value;
            }
        }

        /// <remarks/>
        public int XmlVersion
        {
            get
            {
                return this.xmlVersionField;
            }
            set
            {
                this.xmlVersionField = value;
            }
        }

        /// <remarks/>
        public System.Xml.XmlNode ViewGroupDataXml
        {
            get
            {
                return this.viewGroupDataXmlField;
            }
            set
            {
                this.viewGroupDataXmlField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ViewGroup
    {

        private ViewGroupInfo viewGroupInfoField;

        private ViewGroupData viewGroupDataField;

        /// <remarks/>
        public ViewGroupInfo ViewGroupInfo
        {
            get
            {
                return this.viewGroupInfoField;
            }
            set
            {
                this.viewGroupInfoField = value;
            }
        }

        /// <remarks/>
        public ViewGroupData ViewGroupData
        {
            get
            {
                return this.viewGroupDataField;
            }
            set
            {
                this.viewGroupDataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ViewGroupInfo
    {

        private System.Guid idField;

        private string nameField;

        private ViewGroupType viewGroupTypeField;

        private bool readOnlyField;

        private System.DateTime lastModifiedTimeField;

        private string lastModifiedUserField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public ViewGroupType ViewGroupType
        {
            get
            {
                return this.viewGroupTypeField;
            }
            set
            {
                this.viewGroupTypeField = value;
            }
        }

        /// <remarks/>
        public bool ReadOnly
        {
            get
            {
                return this.readOnlyField;
            }
            set
            {
                this.readOnlyField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModifiedTime
        {
            get
            {
                return this.lastModifiedTimeField;
            }
            set
            {
                this.lastModifiedTimeField = value;
            }
        }

        /// <remarks/>
        public string LastModifiedUser
        {
            get
            {
                return this.lastModifiedUserField;
            }
            set
            {
                this.lastModifiedUserField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum ViewGroupType
    {

        /// <remarks/>
        Normal,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class DictionaryEntry
    {

        private object keyField;

        private object valueField;

        /// <remarks/>
        public object Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        public object Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class DeviceDisabledInfo
    {

        private System.Guid recorderIdField;

        private System.Guid hardwareIdField;

        private System.Guid deviceIdField;

        private string deviceTypeField;

        private string deviceNameField;

        /// <remarks/>
        public System.Guid RecorderId
        {
            get
            {
                return this.recorderIdField;
            }
            set
            {
                this.recorderIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid HardwareId
        {
            get
            {
                return this.hardwareIdField;
            }
            set
            {
                this.hardwareIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid DeviceId
        {
            get
            {
                return this.deviceIdField;
            }
            set
            {
                this.deviceIdField = value;
            }
        }

        /// <remarks/>
        public string DeviceType
        {
            get
            {
                return this.deviceTypeField;
            }
            set
            {
                this.deviceTypeField = value;
            }
        }

        /// <remarks/>
        public string DeviceName
        {
            get
            {
                return this.deviceNameField;
            }
            set
            {
                this.deviceNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class AudioMessageInfo
    {

        private System.Guid idField;

        private string nameField;

        private string descriptionField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class RetentionSettingInfo
    {

        private RetentionOption[] retentionOptionsField;

        /// <remarks/>
        public RetentionOption[] RetentionOptions
        {
            get
            {
                return this.retentionOptionsField;
            }
            set
            {
                this.retentionOptionsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class BookmarkSettingInfo
    {

        private int defaultPreTimeSecField;

        private int defaultPostTimeSecField;

        /// <remarks/>
        public int DefaultPreTimeSec
        {
            get
            {
                return this.defaultPreTimeSecField;
            }
            set
            {
                this.defaultPreTimeSecField = value;
            }
        }

        /// <remarks/>
        public int DefaultPostTimeSec
        {
            get
            {
                return this.defaultPostTimeSecField;
            }
            set
            {
                this.defaultPostTimeSecField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MatrixMonitorInfo
    {

        private System.Guid matrixMonitorIdField;

        private string displayNameField;

        /// <remarks/>
        public System.Guid MatrixMonitorId
        {
            get
            {
                return this.matrixMonitorIdField;
            }
            set
            {
                this.matrixMonitorIdField = value;
            }
        }

        /// <remarks/>
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class AlertTypeInfo
    {

        private System.Guid alertTypeIdField;

        private string nameField;

        private string descriptionField;

        /// <remarks/>
        public System.Guid AlertTypeId
        {
            get
            {
                return this.alertTypeIdField;
            }
            set
            {
                this.alertTypeIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SystemEventTypeInfo
    {

        private System.Guid eventTypeIdField;

        private string nameField;

        private string descriptionField;

        private EventSource eventSourceField;

        /// <remarks/>
        public System.Guid EventTypeId
        {
            get
            {
                return this.eventTypeIdField;
            }
            set
            {
                this.eventTypeIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public EventSource EventSource
        {
            get
            {
                return this.eventSourceField;
            }
            set
            {
                this.eventSourceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum EventSource
    {

        /// <remarks/>
        Undefined,

        /// <remarks/>
        Device,

        /// <remarks/>
        External,

        /// <remarks/>
        Hardware,

        /// <remarks/>
        Recorder,

        /// <remarks/>
        Server,

        /// <remarks/>
        System,

        /// <remarks/>
        Timer,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class EventTypeInfo
    {

        private System.Guid eventTypeIdField;

        private string nameField;

        private string descriptionField;

        /// <remarks/>
        public System.Guid EventTypeId
        {
            get
            {
                return this.eventTypeIdField;
            }
            set
            {
                this.eventTypeIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InputGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutputGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MicrophoneGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpeakerGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MetadataDeviceGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EventTypeGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AlertTypeGroupInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CameraGroupInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public abstract partial class GroupInfo
    {

        private System.Guid groupIdField;

        private string nameField;

        private string descriptionField;

        /// <remarks/>
        public System.Guid GroupId
        {
            get
            {
                return this.groupIdField;
            }
            set
            {
                this.groupIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class InputGroupInfo : GroupInfo
    {

        private InputGroupInfo[] inputGroupsField;

        private System.Guid[] inputsField;

        /// <remarks/>
        public InputGroupInfo[] InputGroups
        {
            get
            {
                return this.inputGroupsField;
            }
            set
            {
                this.inputGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] Inputs
        {
            get
            {
                return this.inputsField;
            }
            set
            {
                this.inputsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class OutputGroupInfo : GroupInfo
    {

        private OutputGroupInfo[] outputGroupsField;

        private System.Guid[] outputsField;

        /// <remarks/>
        public OutputGroupInfo[] OutputGroups
        {
            get
            {
                return this.outputGroupsField;
            }
            set
            {
                this.outputGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] Outputs
        {
            get
            {
                return this.outputsField;
            }
            set
            {
                this.outputsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MicrophoneGroupInfo : GroupInfo
    {

        private MicrophoneGroupInfo[] microphoneGroupsField;

        private System.Guid[] microphonesField;

        /// <remarks/>
        public MicrophoneGroupInfo[] MicrophoneGroups
        {
            get
            {
                return this.microphoneGroupsField;
            }
            set
            {
                this.microphoneGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] Microphones
        {
            get
            {
                return this.microphonesField;
            }
            set
            {
                this.microphonesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SpeakerGroupInfo : GroupInfo
    {

        private SpeakerGroupInfo[] speakerGroupsField;

        private System.Guid[] speakersField;

        /// <remarks/>
        public SpeakerGroupInfo[] SpeakerGroups
        {
            get
            {
                return this.speakerGroupsField;
            }
            set
            {
                this.speakerGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] Speakers
        {
            get
            {
                return this.speakersField;
            }
            set
            {
                this.speakersField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MetadataDeviceGroupInfo : GroupInfo
    {

        private MetadataDeviceGroupInfo[] metadataDeviceGroupsField;

        private System.Guid[] metadataDevicesField;

        /// <remarks/>
        public MetadataDeviceGroupInfo[] MetadataDeviceGroups
        {
            get
            {
                return this.metadataDeviceGroupsField;
            }
            set
            {
                this.metadataDeviceGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] MetadataDevices
        {
            get
            {
                return this.metadataDevicesField;
            }
            set
            {
                this.metadataDevicesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class EventTypeGroupInfo : GroupInfo
    {

        private EventTypeGroupInfo[] eventTypeGroupsField;

        private System.Guid[] eventTypesField;

        /// <remarks/>
        public EventTypeGroupInfo[] EventTypeGroups
        {
            get
            {
                return this.eventTypeGroupsField;
            }
            set
            {
                this.eventTypeGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] EventTypes
        {
            get
            {
                return this.eventTypesField;
            }
            set
            {
                this.eventTypesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class AlertTypeGroupInfo : GroupInfo
    {

        private AlertTypeGroupInfo[] alertTypeGroupsField;

        private System.Guid[] alertTypesField;

        /// <remarks/>
        public AlertTypeGroupInfo[] AlertTypeGroups
        {
            get
            {
                return this.alertTypeGroupsField;
            }
            set
            {
                this.alertTypeGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] AlertTypes
        {
            get
            {
                return this.alertTypesField;
            }
            set
            {
                this.alertTypesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CameraGroupInfo : GroupInfo
    {

        private CameraGroupInfo[] cameraGroupsField;

        private System.Guid[] camerasField;

        /// <remarks/>
        public CameraGroupInfo[] CameraGroups
        {
            get
            {
                return this.cameraGroupsField;
            }
            set
            {
                this.cameraGroupsField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] Cameras
        {
            get
            {
                return this.camerasField;
            }
            set
            {
                this.camerasField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class DeviceMappingInfo
    {

        private System.Guid deviceAField;

        private System.Guid deviceBField;

        /// <remarks/>
        public System.Guid DeviceA
        {
            get
            {
                return this.deviceAField;
            }
            set
            {
                this.deviceAField = value;
            }
        }

        /// <remarks/>
        public System.Guid DeviceB
        {
            get
            {
                return this.deviceBField;
            }
            set
            {
                this.deviceBField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class LicenseInfo
    {

        private System.Guid licenseIdField;

        private string dataField;

        /// <remarks/>
        public System.Guid LicenseId
        {
            get
            {
                return this.licenseIdField;
            }
            set
            {
                this.licenseIdField = value;
            }
        }

        /// <remarks/>
        public string Data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SmartClientSecurityInfo
    {

        private bool smartClientLiveField;

        private bool smartClientBrowseField;

        private bool smartClientSetupField;

        private bool smartClientReportField;

        /// <remarks/>
        public bool SmartClientLive
        {
            get
            {
                return this.smartClientLiveField;
            }
            set
            {
                this.smartClientLiveField = value;
            }
        }

        /// <remarks/>
        public bool SmartClientBrowse
        {
            get
            {
                return this.smartClientBrowseField;
            }
            set
            {
                this.smartClientBrowseField = value;
            }
        }

        /// <remarks/>
        public bool SmartClientSetup
        {
            get
            {
                return this.smartClientSetupField;
            }
            set
            {
                this.smartClientSetupField = value;
            }
        }

        /// <remarks/>
        public bool SmartClientReport
        {
            get
            {
                return this.smartClientReportField;
            }
            set
            {
                this.smartClientReportField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ApplicationSecurityInfo
    {

        private SmartClientSecurityInfo smartClientSecurityField;

        /// <remarks/>
        public SmartClientSecurityInfo SmartClientSecurity
        {
            get
            {
                return this.smartClientSecurityField;
            }
            set
            {
                this.smartClientSecurityField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class HardwareInfo
    {

        private System.Guid hardwareIdField;

        private System.Guid[] deviceIdsField;

        private System.Guid recorderIdField;

        private string nameField;

        private string descriptionField;

        private string uriField;

        private bool interconnectedField;

        private System.DateTime lastModifiedField;

        /// <remarks/>
        public System.Guid HardwareId
        {
            get
            {
                return this.hardwareIdField;
            }
            set
            {
                this.hardwareIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid[] DeviceIds
        {
            get
            {
                return this.deviceIdsField;
            }
            set
            {
                this.deviceIdsField = value;
            }
        }

        /// <remarks/>
        public System.Guid RecorderId
        {
            get
            {
                return this.recorderIdField;
            }
            set
            {
                this.recorderIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string Uri
        {
            get
            {
                return this.uriField;
            }
            set
            {
                this.uriField = value;
            }
        }

        /// <remarks/>
        public bool Interconnected
        {
            get
            {
                return this.interconnectedField;
            }
            set
            {
                this.interconnectedField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class InputSecurityInfo
    {

        private bool readInputField;

        /// <remarks/>
        public bool ReadInput
        {
            get
            {
                return this.readInputField;
            }
            set
            {
                this.readInputField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class OutputSecurityInfo
    {

        private bool activateField;

        /// <remarks/>
        public bool Activate
        {
            get
            {
                return this.activateField;
            }
            set
            {
                this.activateField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MicrophoneSecurityInfo
    {

        private bool liveField;

        private bool browseField;

        private bool getSequencesField;

        private bool exportDatabaseField;

        private bool bookmarkViewField;

        private bool bookmarkAddField;

        private bool bookmarkEditField;

        private bool bookmarkDeleteField;

        private bool retentionViewField;

        private bool retentionCreateField;

        private bool retentionRemoveField;

        private bool retrieveEdgeRecordingsField;

        private bool startRecordingField;

        private bool stopRecordingField;

        /// <remarks/>
        public bool Live
        {
            get
            {
                return this.liveField;
            }
            set
            {
                this.liveField = value;
            }
        }

        /// <remarks/>
        public bool Browse
        {
            get
            {
                return this.browseField;
            }
            set
            {
                this.browseField = value;
            }
        }

        /// <remarks/>
        public bool GetSequences
        {
            get
            {
                return this.getSequencesField;
            }
            set
            {
                this.getSequencesField = value;
            }
        }

        /// <remarks/>
        public bool ExportDatabase
        {
            get
            {
                return this.exportDatabaseField;
            }
            set
            {
                this.exportDatabaseField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkView
        {
            get
            {
                return this.bookmarkViewField;
            }
            set
            {
                this.bookmarkViewField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkAdd
        {
            get
            {
                return this.bookmarkAddField;
            }
            set
            {
                this.bookmarkAddField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkEdit
        {
            get
            {
                return this.bookmarkEditField;
            }
            set
            {
                this.bookmarkEditField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkDelete
        {
            get
            {
                return this.bookmarkDeleteField;
            }
            set
            {
                this.bookmarkDeleteField = value;
            }
        }

        /// <remarks/>
        public bool RetentionView
        {
            get
            {
                return this.retentionViewField;
            }
            set
            {
                this.retentionViewField = value;
            }
        }

        /// <remarks/>
        public bool RetentionCreate
        {
            get
            {
                return this.retentionCreateField;
            }
            set
            {
                this.retentionCreateField = value;
            }
        }

        /// <remarks/>
        public bool RetentionRemove
        {
            get
            {
                return this.retentionRemoveField;
            }
            set
            {
                this.retentionRemoveField = value;
            }
        }

        /// <remarks/>
        public bool RetrieveEdgeRecordings
        {
            get
            {
                return this.retrieveEdgeRecordingsField;
            }
            set
            {
                this.retrieveEdgeRecordingsField = value;
            }
        }

        /// <remarks/>
        public bool StartRecording
        {
            get
            {
                return this.startRecordingField;
            }
            set
            {
                this.startRecordingField = value;
            }
        }

        /// <remarks/>
        public bool StopRecording
        {
            get
            {
                return this.stopRecordingField;
            }
            set
            {
                this.stopRecordingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SpeakerSecurityInfo
    {

        private bool liveField;

        private bool browseField;

        private bool speakField;

        private bool getSequencesField;

        private bool exportDatabaseField;

        private bool bookmarkViewField;

        private bool bookmarkAddField;

        private bool bookmarkEditField;

        private bool bookmarkDeleteField;

        private bool retentionViewField;

        private bool retentionCreateField;

        private bool retentionRemoveField;

        private bool retrieveEdgeRecordingsField;

        private bool startRecordingField;

        private bool stopRecordingField;

        /// <remarks/>
        public bool Live
        {
            get
            {
                return this.liveField;
            }
            set
            {
                this.liveField = value;
            }
        }

        /// <remarks/>
        public bool Browse
        {
            get
            {
                return this.browseField;
            }
            set
            {
                this.browseField = value;
            }
        }

        /// <remarks/>
        public bool Speak
        {
            get
            {
                return this.speakField;
            }
            set
            {
                this.speakField = value;
            }
        }

        /// <remarks/>
        public bool GetSequences
        {
            get
            {
                return this.getSequencesField;
            }
            set
            {
                this.getSequencesField = value;
            }
        }

        /// <remarks/>
        public bool ExportDatabase
        {
            get
            {
                return this.exportDatabaseField;
            }
            set
            {
                this.exportDatabaseField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkView
        {
            get
            {
                return this.bookmarkViewField;
            }
            set
            {
                this.bookmarkViewField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkAdd
        {
            get
            {
                return this.bookmarkAddField;
            }
            set
            {
                this.bookmarkAddField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkEdit
        {
            get
            {
                return this.bookmarkEditField;
            }
            set
            {
                this.bookmarkEditField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkDelete
        {
            get
            {
                return this.bookmarkDeleteField;
            }
            set
            {
                this.bookmarkDeleteField = value;
            }
        }

        /// <remarks/>
        public bool RetentionView
        {
            get
            {
                return this.retentionViewField;
            }
            set
            {
                this.retentionViewField = value;
            }
        }

        /// <remarks/>
        public bool RetentionCreate
        {
            get
            {
                return this.retentionCreateField;
            }
            set
            {
                this.retentionCreateField = value;
            }
        }

        /// <remarks/>
        public bool RetentionRemove
        {
            get
            {
                return this.retentionRemoveField;
            }
            set
            {
                this.retentionRemoveField = value;
            }
        }

        /// <remarks/>
        public bool RetrieveEdgeRecordings
        {
            get
            {
                return this.retrieveEdgeRecordingsField;
            }
            set
            {
                this.retrieveEdgeRecordingsField = value;
            }
        }

        /// <remarks/>
        public bool StartRecording
        {
            get
            {
                return this.startRecordingField;
            }
            set
            {
                this.startRecordingField = value;
            }
        }

        /// <remarks/>
        public bool StopRecording
        {
            get
            {
                return this.stopRecordingField;
            }
            set
            {
                this.stopRecordingField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MetadataTypeInfo
    {

        private System.Guid idField;

        private string nameField;

        private System.Guid displayIdField;

        private string displayNameField;

        private int validTimeField;

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public System.Guid DisplayId
        {
            get
            {
                return this.displayIdField;
            }
            set
            {
                this.displayIdField = value;
            }
        }

        /// <remarks/>
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }

        /// <remarks/>
        public int ValidTime
        {
            get
            {
                return this.validTimeField;
            }
            set
            {
                this.validTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MetadataDeviceSecurityInfo
    {

        private bool liveField;

        private bool browseField;

        private bool getSequencesField;

        private bool exportDatabaseField;

        private bool retrieveEdgeRecordingsField;

        private bool startRecordingField;

        private bool stopRecordingField;

        private bool retentionViewField;

        private bool retentionCreateField;

        private bool retentionRemoveField;

        /// <remarks/>
        public bool Live
        {
            get
            {
                return this.liveField;
            }
            set
            {
                this.liveField = value;
            }
        }

        /// <remarks/>
        public bool Browse
        {
            get
            {
                return this.browseField;
            }
            set
            {
                this.browseField = value;
            }
        }

        /// <remarks/>
        public bool GetSequences
        {
            get
            {
                return this.getSequencesField;
            }
            set
            {
                this.getSequencesField = value;
            }
        }

        /// <remarks/>
        public bool ExportDatabase
        {
            get
            {
                return this.exportDatabaseField;
            }
            set
            {
                this.exportDatabaseField = value;
            }
        }

        /// <remarks/>
        public bool RetrieveEdgeRecordings
        {
            get
            {
                return this.retrieveEdgeRecordingsField;
            }
            set
            {
                this.retrieveEdgeRecordingsField = value;
            }
        }

        /// <remarks/>
        public bool StartRecording
        {
            get
            {
                return this.startRecordingField;
            }
            set
            {
                this.startRecordingField = value;
            }
        }

        /// <remarks/>
        public bool StopRecording
        {
            get
            {
                return this.stopRecordingField;
            }
            set
            {
                this.stopRecordingField = value;
            }
        }

        /// <remarks/>
        public bool RetentionView
        {
            get
            {
                return this.retentionViewField;
            }
            set
            {
                this.retentionViewField = value;
            }
        }

        /// <remarks/>
        public bool RetentionCreate
        {
            get
            {
                return this.retentionCreateField;
            }
            set
            {
                this.retentionCreateField = value;
            }
        }

        /// <remarks/>
        public bool RetentionRemove
        {
            get
            {
                return this.retentionRemoveField;
            }
            set
            {
                this.retentionRemoveField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ImmerVisionInfo
    {

        private string lensProfileRplField;

        private string lensProfileNameField;

        private string lensProfileDataField;

        /// <remarks/>
        public string LensProfileRpl
        {
            get
            {
                return this.lensProfileRplField;
            }
            set
            {
                this.lensProfileRplField = value;
            }
        }

        /// <remarks/>
        public string LensProfileName
        {
            get
            {
                return this.lensProfileNameField;
            }
            set
            {
                this.lensProfileNameField = value;
            }
        }

        /// <remarks/>
        public string LensProfileData
        {
            get
            {
                return this.lensProfileDataField;
            }
            set
            {
                this.lensProfileDataField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class PanoramicLensInfo
    {

        private bool panoramicLensEnabledField;

        private string panoramicLensTypeField;

        private string cameraMountField;

        private ImmerVisionInfo immerVisionField;

        /// <remarks/>
        public bool PanoramicLensEnabled
        {
            get
            {
                return this.panoramicLensEnabledField;
            }
            set
            {
                this.panoramicLensEnabledField = value;
            }
        }

        /// <remarks/>
        public string PanoramicLensType
        {
            get
            {
                return this.panoramicLensTypeField;
            }
            set
            {
                this.panoramicLensTypeField = value;
            }
        }

        /// <remarks/>
        public string CameraMount
        {
            get
            {
                return this.cameraMountField;
            }
            set
            {
                this.cameraMountField = value;
            }
        }

        /// <remarks/>
        public ImmerVisionInfo ImmerVision
        {
            get
            {
                return this.immerVisionField;
            }
            set
            {
                this.immerVisionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class HemisphereInfo
    {

        private double radiusXField;

        private double radiusYField;

        private double centerXField;

        private double centerYField;

        /// <remarks/>
        public double RadiusX
        {
            get
            {
                return this.radiusXField;
            }
            set
            {
                this.radiusXField = value;
            }
        }

        /// <remarks/>
        public double RadiusY
        {
            get
            {
                return this.radiusYField;
            }
            set
            {
                this.radiusYField = value;
            }
        }

        /// <remarks/>
        public double CenterX
        {
            get
            {
                return this.centerXField;
            }
            set
            {
                this.centerXField = value;
            }
        }

        /// <remarks/>
        public double CenterY
        {
            get
            {
                return this.centerYField;
            }
            set
            {
                this.centerYField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class IpixInfo
    {

        private bool ipixEnabledField;

        private HemisphereInfo hemisphereField;

        private PositionInfo homepositionField;

        private bool ceilingMountedField;

        /// <remarks/>
        public bool IpixEnabled
        {
            get
            {
                return this.ipixEnabledField;
            }
            set
            {
                this.ipixEnabledField = value;
            }
        }

        /// <remarks/>
        public HemisphereInfo Hemisphere
        {
            get
            {
                return this.hemisphereField;
            }
            set
            {
                this.hemisphereField = value;
            }
        }

        /// <remarks/>
        public PositionInfo Homeposition
        {
            get
            {
                return this.homepositionField;
            }
            set
            {
                this.homepositionField = value;
            }
        }

        /// <remarks/>
        public bool CeilingMounted
        {
            get
            {
                return this.ceilingMountedField;
            }
            set
            {
                this.ceilingMountedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class PositionInfo
    {

        private double panField;

        private double tiltField;

        private double zoomField;

        /// <remarks/>
        public double Pan
        {
            get
            {
                return this.panField;
            }
            set
            {
                this.panField = value;
            }
        }

        /// <remarks/>
        public double Tilt
        {
            get
            {
                return this.tiltField;
            }
            set
            {
                this.tiltField = value;
            }
        }

        /// <remarks/>
        public double Zoom
        {
            get
            {
                return this.zoomField;
            }
            set
            {
                this.zoomField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CapabilityInfo
    {

        private System.Guid capabilityIdField;

        private string nameField;

        private bool absoluteField;

        private bool relativeField;

        private bool startField;

        private bool stopField;

        private bool speedField;

        private bool automaticField;

        /// <remarks/>
        public System.Guid CapabilityId
        {
            get
            {
                return this.capabilityIdField;
            }
            set
            {
                this.capabilityIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public bool Absolute
        {
            get
            {
                return this.absoluteField;
            }
            set
            {
                this.absoluteField = value;
            }
        }

        /// <remarks/>
        public bool Relative
        {
            get
            {
                return this.relativeField;
            }
            set
            {
                this.relativeField = value;
            }
        }

        /// <remarks/>
        public bool Start
        {
            get
            {
                return this.startField;
            }
            set
            {
                this.startField = value;
            }
        }

        /// <remarks/>
        public bool Stop
        {
            get
            {
                return this.stopField;
            }
            set
            {
                this.stopField = value;
            }
        }

        /// <remarks/>
        public bool Speed
        {
            get
            {
                return this.speedField;
            }
            set
            {
                this.speedField = value;
            }
        }

        /// <remarks/>
        public bool Automatic
        {
            get
            {
                return this.automaticField;
            }
            set
            {
                this.automaticField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class PresetInfo
    {

        private string nameField;

        private PositionInfo positionField;

        private string shortcutField;

        private System.Guid idField;

        private bool lockedField;

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public PositionInfo Position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }

        /// <remarks/>
        public string Shortcut
        {
            get
            {
                return this.shortcutField;
            }
            set
            {
                this.shortcutField = value;
            }
        }

        /// <remarks/>
        public System.Guid Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public bool Locked
        {
            get
            {
                return this.lockedField;
            }
            set
            {
                this.lockedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class PtzInfo
    {

        private bool ptzEnabledField;

        private PresetInfo[] presetsField;

        private CapabilityInfo[] capabilitiesField;

        private bool isCenterOnPositionInViewSupportedField;

        private bool isPtzCenterAndZoomToRectangleSupportedField;

        private bool isPtzHomeSupportedField;

        private bool isPtzDiagonalSupportedField;

        private bool editPresetField;

        /// <remarks/>
        public bool PtzEnabled
        {
            get
            {
                return this.ptzEnabledField;
            }
            set
            {
                this.ptzEnabledField = value;
            }
        }

        /// <remarks/>
        public PresetInfo[] Presets
        {
            get
            {
                return this.presetsField;
            }
            set
            {
                this.presetsField = value;
            }
        }

        /// <remarks/>
        public CapabilityInfo[] Capabilities
        {
            get
            {
                return this.capabilitiesField;
            }
            set
            {
                this.capabilitiesField = value;
            }
        }

        /// <remarks/>
        public bool IsCenterOnPositionInViewSupported
        {
            get
            {
                return this.isCenterOnPositionInViewSupportedField;
            }
            set
            {
                this.isCenterOnPositionInViewSupportedField = value;
            }
        }

        /// <remarks/>
        public bool IsPtzCenterAndZoomToRectangleSupported
        {
            get
            {
                return this.isPtzCenterAndZoomToRectangleSupportedField;
            }
            set
            {
                this.isPtzCenterAndZoomToRectangleSupportedField = value;
            }
        }

        /// <remarks/>
        public bool IsPtzHomeSupported
        {
            get
            {
                return this.isPtzHomeSupportedField;
            }
            set
            {
                this.isPtzHomeSupportedField = value;
            }
        }

        /// <remarks/>
        public bool IsPtzDiagonalSupported
        {
            get
            {
                return this.isPtzDiagonalSupportedField;
            }
            set
            {
                this.isPtzDiagonalSupportedField = value;
            }
        }

        /// <remarks/>
        public bool EditPreset
        {
            get
            {
                return this.editPresetField;
            }
            set
            {
                this.editPresetField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class PtzSecurityInfo
    {

        private bool manualControlField;

        private bool presetControlField;

        private bool reserveControlField;

        /// <remarks/>
        public bool ManualControl
        {
            get
            {
                return this.manualControlField;
            }
            set
            {
                this.manualControlField = value;
            }
        }

        /// <remarks/>
        public bool PresetControl
        {
            get
            {
                return this.presetControlField;
            }
            set
            {
                this.presetControlField = value;
            }
        }

        /// <remarks/>
        public bool ReserveControl
        {
            get
            {
                return this.reserveControlField;
            }
            set
            {
                this.reserveControlField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CameraSecurityInfo
    {

        private bool liveField;

        private bool browseField;

        private bool exportAviField;

        private bool exportJpegField;

        private bool smartSearchField;

        private bool getSequencesField;

        private bool exportDatabaseField;

        private bool startRecordingField;

        private bool stopRecordingField;

        private PtzSecurityInfo ptzSecurityField;

        private bool bookmarkViewField;

        private bool bookmarkAddField;

        private bool bookmarkEditField;

        private bool bookmarkDeleteField;

        private bool retentionViewField;

        private bool retentionCreateField;

        private bool retentionRemoveField;

        private bool managePresetsField;

        private bool managePatrollingProfilesField;

        private bool managePresetLocksField;

        private bool retrieveEdgeRecordingsField;

        /// <remarks/>
        public bool Live
        {
            get
            {
                return this.liveField;
            }
            set
            {
                this.liveField = value;
            }
        }

        /// <remarks/>
        public bool Browse
        {
            get
            {
                return this.browseField;
            }
            set
            {
                this.browseField = value;
            }
        }

        /// <remarks/>
        public bool ExportAvi
        {
            get
            {
                return this.exportAviField;
            }
            set
            {
                this.exportAviField = value;
            }
        }

        /// <remarks/>
        public bool ExportJpeg
        {
            get
            {
                return this.exportJpegField;
            }
            set
            {
                this.exportJpegField = value;
            }
        }

        /// <remarks/>
        public bool SmartSearch
        {
            get
            {
                return this.smartSearchField;
            }
            set
            {
                this.smartSearchField = value;
            }
        }

        /// <remarks/>
        public bool GetSequences
        {
            get
            {
                return this.getSequencesField;
            }
            set
            {
                this.getSequencesField = value;
            }
        }

        /// <remarks/>
        public bool ExportDatabase
        {
            get
            {
                return this.exportDatabaseField;
            }
            set
            {
                this.exportDatabaseField = value;
            }
        }

        /// <remarks/>
        public bool StartRecording
        {
            get
            {
                return this.startRecordingField;
            }
            set
            {
                this.startRecordingField = value;
            }
        }

        /// <remarks/>
        public bool StopRecording
        {
            get
            {
                return this.stopRecordingField;
            }
            set
            {
                this.stopRecordingField = value;
            }
        }

        /// <remarks/>
        public PtzSecurityInfo PtzSecurity
        {
            get
            {
                return this.ptzSecurityField;
            }
            set
            {
                this.ptzSecurityField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkView
        {
            get
            {
                return this.bookmarkViewField;
            }
            set
            {
                this.bookmarkViewField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkAdd
        {
            get
            {
                return this.bookmarkAddField;
            }
            set
            {
                this.bookmarkAddField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkEdit
        {
            get
            {
                return this.bookmarkEditField;
            }
            set
            {
                this.bookmarkEditField = value;
            }
        }

        /// <remarks/>
        public bool BookmarkDelete
        {
            get
            {
                return this.bookmarkDeleteField;
            }
            set
            {
                this.bookmarkDeleteField = value;
            }
        }

        /// <remarks/>
        public bool RetentionView
        {
            get
            {
                return this.retentionViewField;
            }
            set
            {
                this.retentionViewField = value;
            }
        }

        /// <remarks/>
        public bool RetentionCreate
        {
            get
            {
                return this.retentionCreateField;
            }
            set
            {
                this.retentionCreateField = value;
            }
        }

        /// <remarks/>
        public bool RetentionRemove
        {
            get
            {
                return this.retentionRemoveField;
            }
            set
            {
                this.retentionRemoveField = value;
            }
        }

        /// <remarks/>
        public bool ManagePresets
        {
            get
            {
                return this.managePresetsField;
            }
            set
            {
                this.managePresetsField = value;
            }
        }

        /// <remarks/>
        public bool ManagePatrollingProfiles
        {
            get
            {
                return this.managePatrollingProfilesField;
            }
            set
            {
                this.managePatrollingProfilesField = value;
            }
        }

        /// <remarks/>
        public bool ManagePresetLocks
        {
            get
            {
                return this.managePresetLocksField;
            }
            set
            {
                this.managePresetLocksField = value;
            }
        }

        /// <remarks/>
        public bool RetrieveEdgeRecordings
        {
            get
            {
                return this.retrieveEdgeRecordingsField;
            }
            set
            {
                this.retrieveEdgeRecordingsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class TrackInfo
    {

        private System.Guid trackIdField;

        private bool edgeField;

        /// <remarks/>
        public System.Guid TrackId
        {
            get
            {
                return this.trackIdField;
            }
            set
            {
                this.trackIdField = value;
            }
        }

        /// <remarks/>
        public bool Edge
        {
            get
            {
                return this.edgeField;
            }
            set
            {
                this.edgeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class StreamInfo
    {

        private System.Guid streamIdField;

        private string nameField;

        private bool defaultField;

        /// <remarks/>
        public System.Guid StreamId
        {
            get
            {
                return this.streamIdField;
            }
            set
            {
                this.streamIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public bool Default
        {
            get
            {
                return this.defaultField;
            }
            set
            {
                this.defaultField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InputInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutputInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MicrophoneInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpeakerInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MetadataDeviceInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CameraInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public abstract partial class DeviceInfo
    {

        private System.Guid recorderIdField;

        private System.Guid hardwareIdField;

        private System.Guid deviceIdField;

        private string nameField;

        private string descriptionField;

        private string shortcutField;

        private int deviceIndexField;

        private string gisPointField;

        private string shortNameField;

        private int iconField;

        private double coverageDirectionField;

        private double coverageDepthField;

        private double coverageFieldOfViewField;

        /// <remarks/>
        public System.Guid RecorderId
        {
            get
            {
                return this.recorderIdField;
            }
            set
            {
                this.recorderIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid HardwareId
        {
            get
            {
                return this.hardwareIdField;
            }
            set
            {
                this.hardwareIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid DeviceId
        {
            get
            {
                return this.deviceIdField;
            }
            set
            {
                this.deviceIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string Shortcut
        {
            get
            {
                return this.shortcutField;
            }
            set
            {
                this.shortcutField = value;
            }
        }

        /// <remarks/>
        public int DeviceIndex
        {
            get
            {
                return this.deviceIndexField;
            }
            set
            {
                this.deviceIndexField = value;
            }
        }

        /// <remarks/>
        public string GisPoint
        {
            get
            {
                return this.gisPointField;
            }
            set
            {
                this.gisPointField = value;
            }
        }

        /// <remarks/>
        public string ShortName
        {
            get
            {
                return this.shortNameField;
            }
            set
            {
                this.shortNameField = value;
            }
        }

        /// <remarks/>
        public int Icon
        {
            get
            {
                return this.iconField;
            }
            set
            {
                this.iconField = value;
            }
        }

        /// <remarks/>
        public double CoverageDirection
        {
            get
            {
                return this.coverageDirectionField;
            }
            set
            {
                this.coverageDirectionField = value;
            }
        }

        /// <remarks/>
        public double CoverageDepth
        {
            get
            {
                return this.coverageDepthField;
            }
            set
            {
                this.coverageDepthField = value;
            }
        }

        /// <remarks/>
        public double CoverageFieldOfView
        {
            get
            {
                return this.coverageFieldOfViewField;
            }
            set
            {
                this.coverageFieldOfViewField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class InputInfo : DeviceInfo
    {

        private InputSecurityInfo inputSecurityField;

        /// <remarks/>
        public InputSecurityInfo InputSecurity
        {
            get
            {
                return this.inputSecurityField;
            }
            set
            {
                this.inputSecurityField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class OutputInfo : DeviceInfo
    {

        private OutputSecurityInfo outputSecurityField;

        /// <remarks/>
        public OutputSecurityInfo OutputSecurity
        {
            get
            {
                return this.outputSecurityField;
            }
            set
            {
                this.outputSecurityField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MicrophoneInfo : DeviceInfo
    {

        private TrackInfo[] tracksField;

        private MicrophoneSecurityInfo microphoneSecurityField;

        private bool multicastEnabledField;

        private bool edgeStorageSupportedField;

        private bool edgeStoragePlaybackField;

        private int stopManualRecordingSecondsField;

        /// <remarks/>
        public TrackInfo[] Tracks
        {
            get
            {
                return this.tracksField;
            }
            set
            {
                this.tracksField = value;
            }
        }

        /// <remarks/>
        public MicrophoneSecurityInfo MicrophoneSecurity
        {
            get
            {
                return this.microphoneSecurityField;
            }
            set
            {
                this.microphoneSecurityField = value;
            }
        }

        /// <remarks/>
        public bool MulticastEnabled
        {
            get
            {
                return this.multicastEnabledField;
            }
            set
            {
                this.multicastEnabledField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStorageSupported
        {
            get
            {
                return this.edgeStorageSupportedField;
            }
            set
            {
                this.edgeStorageSupportedField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStoragePlayback
        {
            get
            {
                return this.edgeStoragePlaybackField;
            }
            set
            {
                this.edgeStoragePlaybackField = value;
            }
        }

        /// <remarks/>
        public int StopManualRecordingSeconds
        {
            get
            {
                return this.stopManualRecordingSecondsField;
            }
            set
            {
                this.stopManualRecordingSecondsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SpeakerInfo : DeviceInfo
    {

        private TrackInfo[] tracksField;

        private SpeakerSecurityInfo speakerSecurityField;

        private bool multicastEnabledField;

        private bool edgeStorageSupportedField;

        private bool edgeStoragePlaybackField;

        private int stopManualRecordingSecondsField;

        /// <remarks/>
        public TrackInfo[] Tracks
        {
            get
            {
                return this.tracksField;
            }
            set
            {
                this.tracksField = value;
            }
        }

        /// <remarks/>
        public SpeakerSecurityInfo SpeakerSecurity
        {
            get
            {
                return this.speakerSecurityField;
            }
            set
            {
                this.speakerSecurityField = value;
            }
        }

        /// <remarks/>
        public bool MulticastEnabled
        {
            get
            {
                return this.multicastEnabledField;
            }
            set
            {
                this.multicastEnabledField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStorageSupported
        {
            get
            {
                return this.edgeStorageSupportedField;
            }
            set
            {
                this.edgeStorageSupportedField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStoragePlayback
        {
            get
            {
                return this.edgeStoragePlaybackField;
            }
            set
            {
                this.edgeStoragePlaybackField = value;
            }
        }

        /// <remarks/>
        public int StopManualRecordingSeconds
        {
            get
            {
                return this.stopManualRecordingSecondsField;
            }
            set
            {
                this.stopManualRecordingSecondsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class MetadataDeviceInfo : DeviceInfo
    {

        private TrackInfo[] tracksField;

        private MetadataDeviceSecurityInfo metadataDeviceSecurityField;

        private bool multicastEnabledField;

        private bool edgeStorageSupportedField;

        private bool edgeStoragePlaybackField;

        private MetadataTypeInfo[] metadataTypesField;

        private int stopManualRecordingSecondsField;

        /// <remarks/>
        public TrackInfo[] Tracks
        {
            get
            {
                return this.tracksField;
            }
            set
            {
                this.tracksField = value;
            }
        }

        /// <remarks/>
        public MetadataDeviceSecurityInfo MetadataDeviceSecurity
        {
            get
            {
                return this.metadataDeviceSecurityField;
            }
            set
            {
                this.metadataDeviceSecurityField = value;
            }
        }

        /// <remarks/>
        public bool MulticastEnabled
        {
            get
            {
                return this.multicastEnabledField;
            }
            set
            {
                this.multicastEnabledField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStorageSupported
        {
            get
            {
                return this.edgeStorageSupportedField;
            }
            set
            {
                this.edgeStorageSupportedField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStoragePlayback
        {
            get
            {
                return this.edgeStoragePlaybackField;
            }
            set
            {
                this.edgeStoragePlaybackField = value;
            }
        }

        /// <remarks/>
        public MetadataTypeInfo[] MetadataTypes
        {
            get
            {
                return this.metadataTypesField;
            }
            set
            {
                this.metadataTypesField = value;
            }
        }

        /// <remarks/>
        public int StopManualRecordingSeconds
        {
            get
            {
                return this.stopManualRecordingSecondsField;
            }
            set
            {
                this.stopManualRecordingSecondsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class CameraInfo : DeviceInfo
    {

        private double maxFPSField;

        private bool browsableStreamField;

        private StreamInfo[] streamsField;

        private TrackInfo[] tracksField;

        private CameraSecurityInfo cameraSecurityField;

        private PtzInfo ptzSettingsField;

        private IpixInfo ipixSettingsField;

        private PanoramicLensInfo panoramicLensSettingsField;

        private bool multicastEnabledField;

        private bool edgeStorageSupportedField;

        private bool edgeStoragePlaybackField;

        private int stopManualRecordingSecondsField;

        /// <remarks/>
        public double MaxFPS
        {
            get
            {
                return this.maxFPSField;
            }
            set
            {
                this.maxFPSField = value;
            }
        }

        /// <remarks/>
        public bool BrowsableStream
        {
            get
            {
                return this.browsableStreamField;
            }
            set
            {
                this.browsableStreamField = value;
            }
        }

        /// <remarks/>
        public StreamInfo[] Streams
        {
            get
            {
                return this.streamsField;
            }
            set
            {
                this.streamsField = value;
            }
        }

        /// <remarks/>
        public TrackInfo[] Tracks
        {
            get
            {
                return this.tracksField;
            }
            set
            {
                this.tracksField = value;
            }
        }

        /// <remarks/>
        public CameraSecurityInfo CameraSecurity
        {
            get
            {
                return this.cameraSecurityField;
            }
            set
            {
                this.cameraSecurityField = value;
            }
        }

        /// <remarks/>
        public PtzInfo PtzSettings
        {
            get
            {
                return this.ptzSettingsField;
            }
            set
            {
                this.ptzSettingsField = value;
            }
        }

        /// <remarks/>
        public IpixInfo IpixSettings
        {
            get
            {
                return this.ipixSettingsField;
            }
            set
            {
                this.ipixSettingsField = value;
            }
        }

        /// <remarks/>
        public PanoramicLensInfo PanoramicLensSettings
        {
            get
            {
                return this.panoramicLensSettingsField;
            }
            set
            {
                this.panoramicLensSettingsField = value;
            }
        }

        /// <remarks/>
        public bool MulticastEnabled
        {
            get
            {
                return this.multicastEnabledField;
            }
            set
            {
                this.multicastEnabledField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStorageSupported
        {
            get
            {
                return this.edgeStorageSupportedField;
            }
            set
            {
                this.edgeStorageSupportedField = value;
            }
        }

        /// <remarks/>
        public bool EdgeStoragePlayback
        {
            get
            {
                return this.edgeStoragePlaybackField;
            }
            set
            {
                this.edgeStoragePlaybackField = value;
            }
        }

        /// <remarks/>
        public int StopManualRecordingSeconds
        {
            get
            {
                return this.stopManualRecordingSecondsField;
            }
            set
            {
                this.stopManualRecordingSecondsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class RecorderInfo
    {

        private System.Guid recorderIdField;

        private System.Guid serviceIdField;

        private string nameField;

        private string descriptionField;

        private string hostNameField;

        private string webServerUriField;

        private string timeZoneNameField;

        private int defaultRecordingTimeSecondsField;

        private string xmlEncodingField;

        private System.DateTime lastModifiedField;

        private CameraInfo[] camerasField;

        private InputInfo[] inputsField;

        private OutputInfo[] outputsField;

        private MicrophoneInfo[] microphonesField;

        private SpeakerInfo[] speakersField;

        private MetadataDeviceInfo[] metadataDevicesField;

        private HardwareInfo[] hardwareField;

        /// <remarks/>
        public System.Guid RecorderId
        {
            get
            {
                return this.recorderIdField;
            }
            set
            {
                this.recorderIdField = value;
            }
        }

        /// <remarks/>
        public System.Guid ServiceId
        {
            get
            {
                return this.serviceIdField;
            }
            set
            {
                this.serviceIdField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string HostName
        {
            get
            {
                return this.hostNameField;
            }
            set
            {
                this.hostNameField = value;
            }
        }

        /// <remarks/>
        public string WebServerUri
        {
            get
            {
                return this.webServerUriField;
            }
            set
            {
                this.webServerUriField = value;
            }
        }

        /// <remarks/>
        public string TimeZoneName
        {
            get
            {
                return this.timeZoneNameField;
            }
            set
            {
                this.timeZoneNameField = value;
            }
        }

        /// <remarks/>
        public int DefaultRecordingTimeSeconds
        {
            get
            {
                return this.defaultRecordingTimeSecondsField;
            }
            set
            {
                this.defaultRecordingTimeSecondsField = value;
            }
        }

        /// <remarks/>
        public string XmlEncoding
        {
            get
            {
                return this.xmlEncodingField;
            }
            set
            {
                this.xmlEncodingField = value;
            }
        }

        /// <remarks/>
        public System.DateTime LastModified
        {
            get
            {
                return this.lastModifiedField;
            }
            set
            {
                this.lastModifiedField = value;
            }
        }

        /// <remarks/>
        public CameraInfo[] Cameras
        {
            get
            {
                return this.camerasField;
            }
            set
            {
                this.camerasField = value;
            }
        }

        /// <remarks/>
        public InputInfo[] Inputs
        {
            get
            {
                return this.inputsField;
            }
            set
            {
                this.inputsField = value;
            }
        }

        /// <remarks/>
        public OutputInfo[] Outputs
        {
            get
            {
                return this.outputsField;
            }
            set
            {
                this.outputsField = value;
            }
        }

        /// <remarks/>
        public MicrophoneInfo[] Microphones
        {
            get
            {
                return this.microphonesField;
            }
            set
            {
                this.microphonesField = value;
            }
        }

        /// <remarks/>
        public SpeakerInfo[] Speakers
        {
            get
            {
                return this.speakersField;
            }
            set
            {
                this.speakersField = value;
            }
        }

        /// <remarks/>
        public MetadataDeviceInfo[] MetadataDevices
        {
            get
            {
                return this.metadataDevicesField;
            }
            set
            {
                this.metadataDevicesField = value;
            }
        }

        /// <remarks/>
        public HardwareInfo[] Hardware
        {
            get
            {
                return this.hardwareField;
            }
            set
            {
                this.hardwareField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ServerOption
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class ConfigurationInfo
    {

        private System.Guid serverIdField;

        private string serverNameField;

        private string serverDescriptionField;

        private ServerOption[] serverOptionsField;

        private RecorderInfo[] recordersField;

        private ApplicationSecurityInfo applicationAccessField;

        private int failoverCheckIntervalField;

        private LicenseInfo[] licensesField;

        private DeviceMappingInfo[] deviceMappingsField;

        private CameraGroupInfo[] cameraGroupsField;

        private InputGroupInfo[] inputGroupsField;

        private OutputGroupInfo[] outputGroupsField;

        private MicrophoneGroupInfo[] microphoneGroupsField;

        private SpeakerGroupInfo[] speakerGroupsField;

        private MetadataDeviceGroupInfo[] metadataDeviceGroupsField;

        private EventTypeGroupInfo[] eventTypeGroupsField;

        private EventTypeInfo[] eventTypesField;

        private SystemEventTypeInfo[] systemEventTypesField;

        private AlertTypeGroupInfo[] alertTypeGroupsField;

        private AlertTypeInfo[] alertTypesField;

        private MatrixMonitorInfo[] matrixMonitorsField;

        private BookmarkSettingInfo bookmarkSettingsField;

        private RetentionSettingInfo retentionSettingsField;

        private AudioMessageInfo[] audioMessagesField;

        /// <remarks/>
        public System.Guid ServerId
        {
            get
            {
                return this.serverIdField;
            }
            set
            {
                this.serverIdField = value;
            }
        }

        /// <remarks/>
        public string ServerName
        {
            get
            {
                return this.serverNameField;
            }
            set
            {
                this.serverNameField = value;
            }
        }

        /// <remarks/>
        public string ServerDescription
        {
            get
            {
                return this.serverDescriptionField;
            }
            set
            {
                this.serverDescriptionField = value;
            }
        }

        /// <remarks/>
        public ServerOption[] ServerOptions
        {
            get
            {
                return this.serverOptionsField;
            }
            set
            {
                this.serverOptionsField = value;
            }
        }

        /// <remarks/>
        public RecorderInfo[] Recorders
        {
            get
            {
                return this.recordersField;
            }
            set
            {
                this.recordersField = value;
            }
        }

        /// <remarks/>
        public ApplicationSecurityInfo ApplicationAccess
        {
            get
            {
                return this.applicationAccessField;
            }
            set
            {
                this.applicationAccessField = value;
            }
        }

        /// <remarks/>
        public int FailoverCheckInterval
        {
            get
            {
                return this.failoverCheckIntervalField;
            }
            set
            {
                this.failoverCheckIntervalField = value;
            }
        }

        /// <remarks/>
        public LicenseInfo[] Licenses
        {
            get
            {
                return this.licensesField;
            }
            set
            {
                this.licensesField = value;
            }
        }

        /// <remarks/>
        public DeviceMappingInfo[] DeviceMappings
        {
            get
            {
                return this.deviceMappingsField;
            }
            set
            {
                this.deviceMappingsField = value;
            }
        }

        /// <remarks/>
        public CameraGroupInfo[] CameraGroups
        {
            get
            {
                return this.cameraGroupsField;
            }
            set
            {
                this.cameraGroupsField = value;
            }
        }

        /// <remarks/>
        public InputGroupInfo[] InputGroups
        {
            get
            {
                return this.inputGroupsField;
            }
            set
            {
                this.inputGroupsField = value;
            }
        }

        /// <remarks/>
        public OutputGroupInfo[] OutputGroups
        {
            get
            {
                return this.outputGroupsField;
            }
            set
            {
                this.outputGroupsField = value;
            }
        }

        /// <remarks/>
        public MicrophoneGroupInfo[] MicrophoneGroups
        {
            get
            {
                return this.microphoneGroupsField;
            }
            set
            {
                this.microphoneGroupsField = value;
            }
        }

        /// <remarks/>
        public SpeakerGroupInfo[] SpeakerGroups
        {
            get
            {
                return this.speakerGroupsField;
            }
            set
            {
                this.speakerGroupsField = value;
            }
        }

        /// <remarks/>
        public MetadataDeviceGroupInfo[] MetadataDeviceGroups
        {
            get
            {
                return this.metadataDeviceGroupsField;
            }
            set
            {
                this.metadataDeviceGroupsField = value;
            }
        }

        /// <remarks/>
        public EventTypeGroupInfo[] EventTypeGroups
        {
            get
            {
                return this.eventTypeGroupsField;
            }
            set
            {
                this.eventTypeGroupsField = value;
            }
        }

        /// <remarks/>
        public EventTypeInfo[] EventTypes
        {
            get
            {
                return this.eventTypesField;
            }
            set
            {
                this.eventTypesField = value;
            }
        }

        /// <remarks/>
        public SystemEventTypeInfo[] SystemEventTypes
        {
            get
            {
                return this.systemEventTypesField;
            }
            set
            {
                this.systemEventTypesField = value;
            }
        }

        /// <remarks/>
        public AlertTypeGroupInfo[] AlertTypeGroups
        {
            get
            {
                return this.alertTypeGroupsField;
            }
            set
            {
                this.alertTypeGroupsField = value;
            }
        }

        /// <remarks/>
        public AlertTypeInfo[] AlertTypes
        {
            get
            {
                return this.alertTypesField;
            }
            set
            {
                this.alertTypesField = value;
            }
        }

        /// <remarks/>
        public MatrixMonitorInfo[] MatrixMonitors
        {
            get
            {
                return this.matrixMonitorsField;
            }
            set
            {
                this.matrixMonitorsField = value;
            }
        }

        /// <remarks/>
        public BookmarkSettingInfo BookmarkSettings
        {
            get
            {
                return this.bookmarkSettingsField;
            }
            set
            {
                this.bookmarkSettingsField = value;
            }
        }

        /// <remarks/>
        public RetentionSettingInfo RetentionSettings
        {
            get
            {
                return this.retentionSettingsField;
            }
            set
            {
                this.retentionSettingsField = value;
            }
        }

        /// <remarks/>
        public AudioMessageInfo[] AudioMessages
        {
            get
            {
                return this.audioMessagesField;
            }
            set
            {
                this.audioMessagesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class UserInfo
    {

        private string nameField;

        private string sidField;

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string sid
        {
            get
            {
                return this.sidField;
            }
            set
            {
                this.sidField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class TimeDuration
    {

        private long microSecondsField;

        /// <remarks/>
        public long MicroSeconds
        {
            get
            {
                return this.microSecondsField;
            }
            set
            {
                this.microSecondsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class LoginInfo
    {

        private string tokenField;

        private System.DateTime registrationTimeField;

        private TimeDuration timeToLiveField;

        private bool timeToLiveLimitedField;

        /// <remarks/>
        public string Token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }

        /// <remarks/>
        public System.DateTime RegistrationTime
        {
            get
            {
                return this.registrationTimeField;
            }
            set
            {
                this.registrationTimeField = value;
            }
        }

        /// <remarks/>
        public TimeDuration TimeToLive
        {
            get
            {
                return this.timeToLiveField;
            }
            set
            {
                this.timeToLiveField = value;
            }
        }

        /// <remarks/>
        public bool TimeToLiveLimited
        {
            get
            {
                return this.timeToLiveLimitedField;
            }
            set
            {
                this.timeToLiveLimitedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class UpgradeInfo
    {

        private string hostnameField;

        private int portField;

        private string pathField;

        private string messageField;

        /// <remarks/>
        public string Hostname
        {
            get
            {
                return this.hostnameField;
            }
            set
            {
                this.hostnameField = value;
            }
        }

        /// <remarks/>
        public int Port
        {
            get
            {
                return this.portField;
            }
            set
            {
                this.portField = value;
            }
        }

        /// <remarks/>
        public string Path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                this.pathField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SmartClientVersion
    {

        private int majorField;

        private int minorField;

        private string revisionField;

        private int betaField;

        private bool forceUpgradeField;

        private string displayNameField;

        private UpgradeInfo upgradeInfoField;

        /// <remarks/>
        public int Major
        {
            get
            {
                return this.majorField;
            }
            set
            {
                this.majorField = value;
            }
        }

        /// <remarks/>
        public int Minor
        {
            get
            {
                return this.minorField;
            }
            set
            {
                this.minorField = value;
            }
        }

        /// <remarks/>
        public string Revision
        {
            get
            {
                return this.revisionField;
            }
            set
            {
                this.revisionField = value;
            }
        }

        /// <remarks/>
        public int Beta
        {
            get
            {
                return this.betaField;
            }
            set
            {
                this.betaField = value;
            }
        }

        /// <remarks/>
        public bool ForceUpgrade
        {
            get
            {
                return this.forceUpgradeField;
            }
            set
            {
                this.forceUpgradeField = value;
            }
        }

        /// <remarks/>
        public string DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                this.displayNameField = value;
            }
        }

        /// <remarks/>
        public UpgradeInfo UpgradeInfo
        {
            get
            {
                return this.upgradeInfoField;
            }
            set
            {
                this.upgradeInfoField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public partial class SystemLicenseInfo
    {

        private bool hasLicenseField;

        private bool isTrialLicenseField;

        private string sLCField;

        private string productSkuField;

        private bool expiresField;

        private System.DateTime expiryDateField;

        private string[] featuresField;

        /// <remarks/>
        public bool HasLicense
        {
            get
            {
                return this.hasLicenseField;
            }
            set
            {
                this.hasLicenseField = value;
            }
        }

        /// <remarks/>
        public bool IsTrialLicense
        {
            get
            {
                return this.isTrialLicenseField;
            }
            set
            {
                this.isTrialLicenseField = value;
            }
        }

        /// <remarks/>
        public string SLC
        {
            get
            {
                return this.sLCField;
            }
            set
            {
                this.sLCField = value;
            }
        }

        /// <remarks/>
        public string ProductSku
        {
            get
            {
                return this.productSkuField;
            }
            set
            {
                this.productSkuField = value;
            }
        }

        /// <remarks/>
        public bool Expires
        {
            get
            {
                return this.expiresField;
            }
            set
            {
                this.expiresField = value;
            }
        }

        /// <remarks/>
        public System.DateTime ExpiryDate
        {
            get
            {
                return this.expiryDateField;
            }
            set
            {
                this.expiryDateField = value;
            }
        }

        /// <remarks/>
        public string[] Features
        {
            get
            {
                return this.featuresField;
            }
            set
            {
                this.featuresField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum SetViewGroupDataResultType
    {

        /// <remarks/>
        UnspecifiedError,

        /// <remarks/>
        Success,

        /// <remarks/>
        ReadOnlyError,

        /// <remarks/>
        ModifiedError,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum SetCustomSettingResultType
    {

        /// <remarks/>
        UnspecifiedError,

        /// <remarks/>
        Success,

        /// <remarks/>
        ModifiedError,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum MediaDeviceType
    {

        /// <remarks/>
        Camera,

        /// <remarks/>
        Microphone,

        /// <remarks/>
        Speaker,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://videoos.net/2/XProtectCSServerCommand")]
    public enum SortOrderOption
    {

        /// <remarks/>
        Header,

        /// <remarks/>
        Description,

        /// <remarks/>
        StartTime,

        /// <remarks/>
        TagTime,

        /// <remarks/>
        EndTime,

        /// <remarks/>
        CreateTime,

        /// <remarks/>
        RetentionExpireTime,

        /// <remarks/>
        UserName,

        /// <remarks/>
        Size,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetServerVersionCompletedEventHandler(object sender, GetServerVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetProductInfoCompletedEventHandler(object sender, GetProductInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ProductInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ProductInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetSystemLicenseInfoCompletedEventHandler(object sender, GetSystemLicenseInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemLicenseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSystemLicenseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemLicenseInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemLicenseInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetSmartClientVersionCompletedEventHandler(object sender, GetSmartClientVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmartClientVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSmartClientVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SmartClientVersion Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SmartClientVersion)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void CheckSmartClientVersionCompletedEventHandler(object sender, CheckSmartClientVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSmartClientVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckSmartClientVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SmartClientVersion Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SmartClientVersion)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void IsOnlineCompletedEventHandler(object sender, IsOnlineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LoginInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LoginInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public UserInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetConfigurationCompletedEventHandler(object sender, GetConfigurationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ConfigurationInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ConfigurationInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetConfigurationRecordersCompletedEventHandler(object sender, GetConfigurationRecordersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationRecordersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConfigurationRecordersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RecorderInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RecorderInfo[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetConfigurationHardwareCompletedEventHandler(object sender, GetConfigurationHardwareCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetConfigurationHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public HardwareInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((HardwareInfo[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetDevicesDisabledCompletedEventHandler(object sender, GetDevicesDisabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDevicesDisabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDevicesDisabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DeviceDisabledInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DeviceDisabledInfo[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetVmoServicesListCompletedEventHandler(object sender, GetVmoServicesListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVmoServicesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetVmoServicesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DictionaryEntry[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryEntry[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetViewGroupsCompletedEventHandler(object sender, GetViewGroupsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetViewGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ViewGroupInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ViewGroupInfo[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetViewGroupDataCompletedEventHandler(object sender, GetViewGroupDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewGroupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetViewGroupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ViewGroup Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ViewGroup)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void SetViewGroupDataCompletedEventHandler(object sender, SetViewGroupDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetViewGroupDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetViewGroupDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SetViewGroupDataResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SetViewGroupDataResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetCustomSettingDataGlobalCompletedEventHandler(object sender, GetCustomSettingDataGlobalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomSettingDataGlobalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomSettingDataGlobalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CustomSetting Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CustomSetting)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetCustomSettingDataUserCompletedEventHandler(object sender, GetCustomSettingDataUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomSettingDataUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomSettingDataUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public CustomSetting Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CustomSetting)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void SetCustomSettingDataGlobalCompletedEventHandler(object sender, SetCustomSettingDataGlobalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCustomSettingDataGlobalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetCustomSettingDataGlobalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SetCustomSettingResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SetCustomSettingResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void SetCustomSettingDataUserCompletedEventHandler(object sender, SetCustomSettingDataUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCustomSettingDataUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SetCustomSettingDataUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SetCustomSettingResultType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SetCustomSettingResultType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void EventTriggerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void EventTriggerWithMetadataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void AlertsGetAroundWithSpanCompletedEventHandler(object sender, AlertsGetAroundWithSpanCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AlertsGetAroundWithSpanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AlertsGetAroundWithSpanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AlertOccurrence[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AlertOccurrence[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MatrixMonitorActivateCameraCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void QueryChangesCompletedEventHandler(object sender, QueryChangesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QueryChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Change[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Change[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void QueryRecorderInfoCompletedEventHandler(object sender, QueryRecorderInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRecorderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QueryRecorderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RecorderInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RecorderInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkGetNewReferenceCompletedEventHandler(object sender, BookmarkGetNewReferenceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkGetNewReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkGetNewReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BookmarkReference Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BookmarkReference)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkCreateCompletedEventHandler(object sender, BookmarkCreateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Bookmark Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Bookmark)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkUpdateCompletedEventHandler(object sender, BookmarkUpdateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Bookmark Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Bookmark)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkGetCompletedEventHandler(object sender, BookmarkGetCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Bookmark Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Bookmark)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkSearchTimeCompletedEventHandler(object sender, BookmarkSearchTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkSearchTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkSearchTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Bookmark[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Bookmark[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void BookmarkSearchFromBookmarkCompletedEventHandler(object sender, BookmarkSearchFromBookmarkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookmarkSearchFromBookmarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BookmarkSearchFromBookmarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Bookmark[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Bookmark[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void QuerySystemMonitorStateSourcesByIdsCompletedEventHandler(object sender, QuerySystemMonitorStateSourcesByIdsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySystemMonitorStateSourcesByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QuerySystemMonitorStateSourcesByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemMonitorStateSource[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemMonitorStateSource[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void QuerySystemMonitorStateSourcesByTypesCompletedEventHandler(object sender, QuerySystemMonitorStateSourcesByTypesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySystemMonitorStateSourcesByTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QuerySystemMonitorStateSourcesByTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemMonitorStateSource[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemMonitorStateSource[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataGetNewReferenceCompletedEventHandler(object sender, MarkedDataGetNewReferenceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataGetNewReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataGetNewReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedDataReference Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedDataReference)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataCreateCompletedEventHandler(object sender, MarkedDataCreateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedDataResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedDataResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataUpdateCompletedEventHandler(object sender, MarkedDataUpdateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedDataResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedDataResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataDeleteCompletedEventHandler(object sender, MarkedDataDeleteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedDataResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedDataResult[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataGetCompletedEventHandler(object sender, MarkedDataGetCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedData Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedData)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void MarkedDataSearchCompletedEventHandler(object sender, MarkedDataSearchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkedDataSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MarkedDataSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MarkedData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MarkedData[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetClientProfileCompletedEventHandler(object sender, GetClientProfileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetClientProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ClientProfile Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ClientProfile)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void GetPresetsCompletedEventHandler(object sender, GetPresetsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPresetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PresetInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PresetInfo[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void DeletePresetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void UpdatePresetNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void UpdatePresetPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void CreatePresetCompletedEventHandler(object sender, CreatePresetCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePresetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreatePresetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Guid Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2053.0")]
    public delegate void OrderPresetsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

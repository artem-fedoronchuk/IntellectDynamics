//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//
// If you use a newer XProtect server than we used to generate this sample, you may want to recreate this file.
// To do that, at a text prompt, type: svcutil http://servername:22331/Central/AlarmServiceToken
// svcutil.exe is a utility program distributed by Microsoft
//
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("urn:milestone-systems", ClrNamespace = "milestonesystems")]

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "http://videoos.net/2/CentralServerAlarmCommand", ConfigurationName = "IAlarmCommandToken", SessionMode = System.ServiceModel.SessionMode.NotAllowed)]
public interface IAlarmCommandToken
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Add", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAlarmService" +
        "FaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void Add(string token, milestonesystems.Alarm alarm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Add", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddResponse")]
    System.Threading.Tasks.Task AddAsync(string token, milestonesystems.Alarm alarm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddEventRespons" +
        "e")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddEventAlarmSe" +
        "rviceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void AddEvent(string token, milestonesystems.BaseEvent baseEvent);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddEventRespons" +
        "e")]
    System.Threading.Tasks.Task AddEventAsync(string token, milestonesystems.BaseEvent baseEvent);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAsEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAsEventRespo" +
        "nse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAsEventAlarm" +
        "ServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void AddAsEvent(string token, milestonesystems.Alarm alarm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAsEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AddAsEventRespo" +
        "nse")]
    System.Threading.Tasks.Task AddAsEventAsync(string token, milestonesystems.Alarm alarm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Get", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmService" +
        "FaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    milestonesystems.Alarm Get(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Get", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetResponse")]
    System.Threading.Tasks.Task<milestonesystems.Alarm> GetAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventRespons" +
        "e")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventAlarmSe" +
        "rviceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    milestonesystems.BaseEvent GetEvent(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEvent", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventRespons" +
        "e")]
    System.Threading.Tasks.Task<milestonesystems.BaseEvent> GetEventAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetHeader", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetHeaderRespon" +
        "se")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetHeaderAlarmS" +
        "erviceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    milestonesystems.EventHeader GetHeader(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetHeader", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetHeaderRespon" +
        "se")]
    System.Threading.Tasks.Task<milestonesystems.EventHeader> GetHeaderAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSnapshots", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSnapshotsRes" +
        "ponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSnapshotsAla" +
        "rmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    milestonesystems.SnapshotList GetSnapshots(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSnapshots", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSnapshotsRes" +
        "ponse")]
    System.Threading.Tasks.Task<milestonesystems.SnapshotList> GetSnapshotsAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AttachSnapshot", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AttachSnapshotR" +
        "esponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AttachSnapshotA" +
        "larmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void AttachSnapshot(string token, System.Guid id, milestonesystems.Snapshot snapshot);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AttachSnapshot", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AttachSnapshotR" +
        "esponse")]
    System.Threading.Tasks.Task AttachSnapshotAsync(string token, System.Guid id, milestonesystems.Snapshot snapshot);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmValu" +
        "es", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmValu" +
        "esResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmValu" +
        "esAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void UpdateAlarmValues(string token, System.Guid id, System.Collections.Generic.KeyValuePair<string, string>[] updates);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmValu" +
        "es", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmValu" +
        "esResponse")]
    System.Threading.Tasks.Task UpdateAlarmValuesAsync(string token, System.Guid id, System.Collections.Generic.KeyValuePair<string, string>[] updates);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarm", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmResp" +
        "onse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmAlar" +
        "mServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void UpdateAlarm(string token, System.Guid id, string text, int state, int priority, System.DateTime time, string assignedTo);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarm", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateAlarmResp" +
        "onse")]
    System.Threading.Tasks.Task UpdateAlarmAsync(string token, System.Guid id, string text, int state, int priority, System.DateTime time, string assignedTo);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Acknowledge", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeResp" +
        "onse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeAlar" +
        "mServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void Acknowledge(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/Acknowledge", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeResp" +
        "onse")]
    System.Threading.Tasks.Task AcknowledgeAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateMultipleA" +
        "larms", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateMultipleA" +
        "larmsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateMultipleA" +
        "larmsAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void UpdateMultipleAlarms(string token, System.Guid objectId, int oldState, int newState, System.DateTime time, string assignedTo);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateMultipleA" +
        "larms", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/UpdateMultipleA" +
        "larmsResponse")]
    System.Threading.Tasks.Task UpdateMultipleAlarmsAsync(string token, System.Guid objectId, int oldState, int newState, System.DateTime time, string assignedTo);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeMult" +
        "ipleAlarms", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeMult" +
        "ipleAlarmsResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeMult" +
        "ipleAlarmsAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void AcknowledgeMultipleAlarms(string token, System.Guid objectId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeMult" +
        "ipleAlarms", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/AcknowledgeMult" +
        "ipleAlarmsResponse")]
    System.Threading.Tasks.Task AcknowledgeMultipleAlarmsAsync(string token, System.Guid objectId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartAlarmLineS" +
        "ession", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartAlarmLineS" +
        "essionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartAlarmLineS" +
        "essionAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    System.Guid StartAlarmLineSession(string token, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartAlarmLineS" +
        "ession", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartAlarmLineS" +
        "essionResponse")]
    System.Threading.Tasks.Task<System.Guid> StartAlarmLineSessionAsync(string token, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopAlarmLineSe" +
        "ssion", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopAlarmLineSe" +
        "ssionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopAlarmLineSe" +
        "ssionAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void StopAlarmLineSession(string token, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopAlarmLineSe" +
        "ssion", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopAlarmLineSe" +
        "ssionResponse")]
    System.Threading.Tasks.Task StopAlarmLineSessionAsync(string token, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionAlarm" +
        "Lines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionAlarm" +
        "LinesResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionAlarm" +
        "LinesAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.AlarmUpdateData GetSessionAlarmLines(string token, int maxCount, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionAlarm" +
        "Lines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionAlarm" +
        "LinesResponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmUpdateData> GetSessionAlarmLinesAsync(string token, int maxCount, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmLines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmLinesRe" +
        "sponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmLinesAl" +
        "armServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.AlarmLine[] GetAlarmLines(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmLines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmLinesRe" +
        "sponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmLine[]> GetAlarmLinesAsync(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartEventLineS" +
        "ession", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartEventLineS" +
        "essionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartEventLineS" +
        "essionAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    System.Guid StartEventLineSession(string token, VideoOS.Platform.Proxy.Alarm.EventFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartEventLineS" +
        "ession", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StartEventLineS" +
        "essionResponse")]
    System.Threading.Tasks.Task<System.Guid> StartEventLineSessionAsync(string token, VideoOS.Platform.Proxy.Alarm.EventFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopEventLineSe" +
        "ssion", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopEventLineSe" +
        "ssionResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopEventLineSe" +
        "ssionAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    void StopEventLineSession(string token, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopEventLineSe" +
        "ssion", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/StopEventLineSe" +
        "ssionResponse")]
    System.Threading.Tasks.Task StopEventLineSessionAsync(string token, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionEvent" +
        "Lines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionEvent" +
        "LinesResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionEvent" +
        "LinesAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.EventUpdateData GetSessionEventLines(string token, int maxCount, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionEvent" +
        "Lines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetSessionEvent" +
        "LinesResponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.EventUpdateData> GetSessionEventLinesAsync(string token, int maxCount, System.Guid sessionId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLinesRe" +
        "sponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLinesAl" +
        "armServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.EventLine[] GetEventLines(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.EventFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLinesRe" +
        "sponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.EventLine[]> GetEventLinesAsync(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.EventFilter filter);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetStatistics", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetStatisticsRe" +
        "sponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetStatisticsAl" +
        "armServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.Statistic[] GetStatistics(string token);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetStatistics", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetStatisticsRe" +
        "sponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.Statistic[]> GetStatisticsAsync(string token);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmHistory" +
        "", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmHistory" +
        "Response")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmHistory" +
        "AlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.AlarmHistory[] GetAlarmHistory(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmHistory" +
        "", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmHistory" +
        "Response")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmHistory[]> GetAlarmHistoryAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmUpdateH" +
        "istory", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmUpdateH" +
        "istoryResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmUpdateH" +
        "istoryAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.AlarmUpdate[] GetAlarmUpdateHistory(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmUpdateH" +
        "istory", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmUpdateH" +
        "istoryResponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmUpdate[]> GetAlarmUpdateHistoryAsync(string token, System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmMessage" +
        "s", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmMessage" +
        "sResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmMessage" +
        "sAlarmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    string[] GetAlarmMessages(string token);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmMessage" +
        "s", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetAlarmMessage" +
        "sResponse")]
    System.Threading.Tasks.Task<string[]> GetAlarmMessagesAsync(string token);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines2", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines2R" +
        "esponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines2A" +
        "larmServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.GetEventLines2Resp GetEventLines2(string token, VideoOS.Platform.Proxy.Alarm.GetEventLines2Params parameters);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines2", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventLines2R" +
        "esponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventLines2Resp> GetEventLines2Async(string token, VideoOS.Platform.Proxy.Alarm.GetEventLines2Params parameters);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventCount", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventCountRe" +
        "sponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventCountAl" +
        "armServiceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.GetEventCountResp GetEventCount(string token, VideoOS.Platform.Proxy.Alarm.GetEventCountParams parameters);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventCount", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventCountRe" +
        "sponse")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventCountResp> GetEventCountAsync(string token, VideoOS.Platform.Proxy.Alarm.GetEventCountParams parameters);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEvents", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventsRespon" +
        "se")]
    [System.ServiceModel.FaultContractAttribute(typeof(VideoOS.Platform.Proxy.Alarm.AlarmServiceFault), Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventsAlarmS" +
        "erviceFaultFault", Name = "AlarmServiceFault", Namespace = "http://schemas.datacontract.org/2004/07/VideoOS.Platform.Proxy.Alarm")]
    VideoOS.Platform.Proxy.Alarm.GetEventsResp GetEvents(string token, VideoOS.Platform.Proxy.Alarm.GetEventsParams parameters);

    [System.ServiceModel.OperationContractAttribute(Action = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEvents", ReplyAction = "http://videoos.net/2/CentralServerAlarmCommand/IAlarmCommandToken/GetEventsRespon" +
        "se")]
    System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventsResp> GetEventsAsync(string token, VideoOS.Platform.Proxy.Alarm.GetEventsParams parameters);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAlarmCommandTokenChannel : IAlarmCommandToken, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AlarmCommandTokenClient : System.ServiceModel.ClientBase<IAlarmCommandToken>, IAlarmCommandToken
{

    public AlarmCommandTokenClient()
    {
    }

    public AlarmCommandTokenClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public AlarmCommandTokenClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public AlarmCommandTokenClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public AlarmCommandTokenClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public void Add(string token, milestonesystems.Alarm alarm)
    {
        base.Channel.Add(token, alarm);
    }

    public System.Threading.Tasks.Task AddAsync(string token, milestonesystems.Alarm alarm)
    {
        return base.Channel.AddAsync(token, alarm);
    }

    public void AddEvent(string token, milestonesystems.BaseEvent baseEvent)
    {
        base.Channel.AddEvent(token, baseEvent);
    }

    public System.Threading.Tasks.Task AddEventAsync(string token, milestonesystems.BaseEvent baseEvent)
    {
        return base.Channel.AddEventAsync(token, baseEvent);
    }

    public void AddAsEvent(string token, milestonesystems.Alarm alarm)
    {
        base.Channel.AddAsEvent(token, alarm);
    }

    public System.Threading.Tasks.Task AddAsEventAsync(string token, milestonesystems.Alarm alarm)
    {
        return base.Channel.AddAsEventAsync(token, alarm);
    }

    public milestonesystems.Alarm Get(string token, System.Guid id)
    {
        return base.Channel.Get(token, id);
    }

    public System.Threading.Tasks.Task<milestonesystems.Alarm> GetAsync(string token, System.Guid id)
    {
        return base.Channel.GetAsync(token, id);
    }

    public milestonesystems.BaseEvent GetEvent(string token, System.Guid id)
    {
        return base.Channel.GetEvent(token, id);
    }

    public System.Threading.Tasks.Task<milestonesystems.BaseEvent> GetEventAsync(string token, System.Guid id)
    {
        return base.Channel.GetEventAsync(token, id);
    }

    public milestonesystems.EventHeader GetHeader(string token, System.Guid id)
    {
        return base.Channel.GetHeader(token, id);
    }

    public System.Threading.Tasks.Task<milestonesystems.EventHeader> GetHeaderAsync(string token, System.Guid id)
    {
        return base.Channel.GetHeaderAsync(token, id);
    }

    public milestonesystems.SnapshotList GetSnapshots(string token, System.Guid id)
    {
        return base.Channel.GetSnapshots(token, id);
    }

    public System.Threading.Tasks.Task<milestonesystems.SnapshotList> GetSnapshotsAsync(string token, System.Guid id)
    {
        return base.Channel.GetSnapshotsAsync(token, id);
    }

    public void AttachSnapshot(string token, System.Guid id, milestonesystems.Snapshot snapshot)
    {
        base.Channel.AttachSnapshot(token, id, snapshot);
    }

    public System.Threading.Tasks.Task AttachSnapshotAsync(string token, System.Guid id, milestonesystems.Snapshot snapshot)
    {
        return base.Channel.AttachSnapshotAsync(token, id, snapshot);
    }

    public void UpdateAlarmValues(string token, System.Guid id, System.Collections.Generic.KeyValuePair<string, string>[] updates)
    {
        base.Channel.UpdateAlarmValues(token, id, updates);
    }

    public System.Threading.Tasks.Task UpdateAlarmValuesAsync(string token, System.Guid id, System.Collections.Generic.KeyValuePair<string, string>[] updates)
    {
        return base.Channel.UpdateAlarmValuesAsync(token, id, updates);
    }

    public void UpdateAlarm(string token, System.Guid id, string text, int state, int priority, System.DateTime time, string assignedTo)
    {
        base.Channel.UpdateAlarm(token, id, text, state, priority, time, assignedTo);
    }

    public System.Threading.Tasks.Task UpdateAlarmAsync(string token, System.Guid id, string text, int state, int priority, System.DateTime time, string assignedTo)
    {
        return base.Channel.UpdateAlarmAsync(token, id, text, state, priority, time, assignedTo);
    }

    public void Acknowledge(string token, System.Guid id)
    {
        base.Channel.Acknowledge(token, id);
    }

    public System.Threading.Tasks.Task AcknowledgeAsync(string token, System.Guid id)
    {
        return base.Channel.AcknowledgeAsync(token, id);
    }

    public void UpdateMultipleAlarms(string token, System.Guid objectId, int oldState, int newState, System.DateTime time, string assignedTo)
    {
        base.Channel.UpdateMultipleAlarms(token, objectId, oldState, newState, time, assignedTo);
    }

    public System.Threading.Tasks.Task UpdateMultipleAlarmsAsync(string token, System.Guid objectId, int oldState, int newState, System.DateTime time, string assignedTo)
    {
        return base.Channel.UpdateMultipleAlarmsAsync(token, objectId, oldState, newState, time, assignedTo);
    }

    public void AcknowledgeMultipleAlarms(string token, System.Guid objectId)
    {
        base.Channel.AcknowledgeMultipleAlarms(token, objectId);
    }

    public System.Threading.Tasks.Task AcknowledgeMultipleAlarmsAsync(string token, System.Guid objectId)
    {
        return base.Channel.AcknowledgeMultipleAlarmsAsync(token, objectId);
    }

    public System.Guid StartAlarmLineSession(string token, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter)
    {
        return base.Channel.StartAlarmLineSession(token, filter);
    }

    public System.Threading.Tasks.Task<System.Guid> StartAlarmLineSessionAsync(string token, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter)
    {
        return base.Channel.StartAlarmLineSessionAsync(token, filter);
    }

    public void StopAlarmLineSession(string token, System.Guid sessionId)
    {
        base.Channel.StopAlarmLineSession(token, sessionId);
    }

    public System.Threading.Tasks.Task StopAlarmLineSessionAsync(string token, System.Guid sessionId)
    {
        return base.Channel.StopAlarmLineSessionAsync(token, sessionId);
    }

    public VideoOS.Platform.Proxy.Alarm.AlarmUpdateData GetSessionAlarmLines(string token, int maxCount, System.Guid sessionId)
    {
        return base.Channel.GetSessionAlarmLines(token, maxCount, sessionId);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmUpdateData> GetSessionAlarmLinesAsync(string token, int maxCount, System.Guid sessionId)
    {
        return base.Channel.GetSessionAlarmLinesAsync(token, maxCount, sessionId);
    }

    public VideoOS.Platform.Proxy.Alarm.AlarmLine[] GetAlarmLines(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter)
    {
        return base.Channel.GetAlarmLines(token, from, maxCount, filter);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmLine[]> GetAlarmLinesAsync(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.AlarmFilter filter)
    {
        return base.Channel.GetAlarmLinesAsync(token, from, maxCount, filter);
    }

    public System.Guid StartEventLineSession(string token, VideoOS.Platform.Proxy.Alarm.EventFilter filter)
    {
        return base.Channel.StartEventLineSession(token, filter);
    }

    public System.Threading.Tasks.Task<System.Guid> StartEventLineSessionAsync(string token, VideoOS.Platform.Proxy.Alarm.EventFilter filter)
    {
        return base.Channel.StartEventLineSessionAsync(token, filter);
    }

    public void StopEventLineSession(string token, System.Guid sessionId)
    {
        base.Channel.StopEventLineSession(token, sessionId);
    }

    public System.Threading.Tasks.Task StopEventLineSessionAsync(string token, System.Guid sessionId)
    {
        return base.Channel.StopEventLineSessionAsync(token, sessionId);
    }

    public VideoOS.Platform.Proxy.Alarm.EventUpdateData GetSessionEventLines(string token, int maxCount, System.Guid sessionId)
    {
        return base.Channel.GetSessionEventLines(token, maxCount, sessionId);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.EventUpdateData> GetSessionEventLinesAsync(string token, int maxCount, System.Guid sessionId)
    {
        return base.Channel.GetSessionEventLinesAsync(token, maxCount, sessionId);
    }

    public VideoOS.Platform.Proxy.Alarm.EventLine[] GetEventLines(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.EventFilter filter)
    {
        return base.Channel.GetEventLines(token, from, maxCount, filter);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.EventLine[]> GetEventLinesAsync(string token, int from, int maxCount, VideoOS.Platform.Proxy.Alarm.EventFilter filter)
    {
        return base.Channel.GetEventLinesAsync(token, from, maxCount, filter);
    }

    public VideoOS.Platform.Proxy.Alarm.Statistic[] GetStatistics(string token)
    {
        return base.Channel.GetStatistics(token);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.Statistic[]> GetStatisticsAsync(string token)
    {
        return base.Channel.GetStatisticsAsync(token);
    }

    public VideoOS.Platform.Proxy.Alarm.AlarmHistory[] GetAlarmHistory(string token, System.Guid id)
    {
        return base.Channel.GetAlarmHistory(token, id);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmHistory[]> GetAlarmHistoryAsync(string token, System.Guid id)
    {
        return base.Channel.GetAlarmHistoryAsync(token, id);
    }

    public VideoOS.Platform.Proxy.Alarm.AlarmUpdate[] GetAlarmUpdateHistory(string token, System.Guid id)
    {
        return base.Channel.GetAlarmUpdateHistory(token, id);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.AlarmUpdate[]> GetAlarmUpdateHistoryAsync(string token, System.Guid id)
    {
        return base.Channel.GetAlarmUpdateHistoryAsync(token, id);
    }

    public string[] GetAlarmMessages(string token)
    {
        return base.Channel.GetAlarmMessages(token);
    }

    public System.Threading.Tasks.Task<string[]> GetAlarmMessagesAsync(string token)
    {
        return base.Channel.GetAlarmMessagesAsync(token);
    }

    public VideoOS.Platform.Proxy.Alarm.GetEventLines2Resp GetEventLines2(string token, VideoOS.Platform.Proxy.Alarm.GetEventLines2Params parameters)
    {
        return base.Channel.GetEventLines2(token, parameters);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventLines2Resp> GetEventLines2Async(string token, VideoOS.Platform.Proxy.Alarm.GetEventLines2Params parameters)
    {
        return base.Channel.GetEventLines2Async(token, parameters);
    }

    public VideoOS.Platform.Proxy.Alarm.GetEventCountResp GetEventCount(string token, VideoOS.Platform.Proxy.Alarm.GetEventCountParams parameters)
    {
        return base.Channel.GetEventCount(token, parameters);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventCountResp> GetEventCountAsync(string token, VideoOS.Platform.Proxy.Alarm.GetEventCountParams parameters)
    {
        return base.Channel.GetEventCountAsync(token, parameters);
    }

    public VideoOS.Platform.Proxy.Alarm.GetEventsResp GetEvents(string token, VideoOS.Platform.Proxy.Alarm.GetEventsParams parameters)
    {
        return base.Channel.GetEvents(token, parameters);
    }

    public System.Threading.Tasks.Task<VideoOS.Platform.Proxy.Alarm.GetEventsResp> GetEventsAsync(string token, VideoOS.Platform.Proxy.Alarm.GetEventsParams parameters)
    {
        return base.Channel.GetEventsAsync(token, parameters);
    }
}
